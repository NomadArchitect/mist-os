# Starnix doesn't work with asan right now. LTO can cause execute_syscall to be inlined
# which breaks unwinding into user code.
## require is_asan=false
## require is_lto=false
## require is_thinlto=false
## require optimize=none
## set timeout 30

# TODO(https://fxbug.dev/42077983): attach shouldn't be necessary.
[zxdb] attach starnix_proc
Waiting for process matching "starnix_proc".

[zxdb] b starnix_proc.cc:9
Created Breakpoint 1 @ starnix_proc.cc:9

[zxdb] run-test --realm /core/testing:system-tests fuchsia-pkg://fuchsia.com/zxdb_e2e_inferiors#meta/starnix_proc.cm
Attached Process 1 state=Running koid=?? name=data/bin/starnix_proc component=starnix_kernel.cm
ðŸ›‘ on bp 1 main() â€¢ starnix_proc.cc:9

[zxdb] next
ðŸ›‘ main() â€¢ starnix_proc.cc:10

# TODO(https://fxbug.dev/42081338): We should use hardware breakpoints here but they don't work on arm64.
[zxdb] b sys_exit_group
Created Breakpoint 2 @ sys_exit_group

[zxdb] c
ðŸ›‘ on bp 2

# Zxdb can unwind into restricted stack.
[zxdb] f
# When optimization is on, there might be other inlined frame so we only check
# the existence of sys_exit_group and main function in the backtrace.
sys_exit_group
main() â€¢ starnix_proc.cc

[zxdb] bp rm
Removed Breakpoint 2 @ sys_exit_group

[zxdb] c
Process 1 exited with code 0.
