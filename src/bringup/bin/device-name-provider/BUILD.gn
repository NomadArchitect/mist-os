# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/zbi/kernel_cmdline.gni")

group("tests") {
  testonly = true
  deps = [ "tests" ]
}

source_set("args") {
  sources = [ "args.cc" ]
  deps = [
    ":device_name_provider_config",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_cpp",
    "//sdk/lib/component/incoming/cpp",
    "//zircon/system/ulib/zx",
  ]
}

fuchsia_component_manifest("manifest") {
  component_name = "device-name-provider"
  manifest = "meta/device-name-provider.cml"
}

fuchsia_structured_config_cpp_elf_lib("device_name_provider_config") {
  cm_label = ":manifest"
}

executable("device-name-provider") {
  sources = [ "device-name-provider.cc" ]
  deps = [
    ":args",
    ":device_name_provider_config",
    "//sdk/fidl/fuchsia.device:fuchsia.device_cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/fdio",
    "//src/bringup/bin/netsvc:netifc-discover",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

fuchsia_component("component") {
  cm_label = ":manifest"
  deps = [ ":device-name-provider" ]
}

fuchsia_package("package") {
  package_name = "device-name-provider"
  deps = [ ":component" ]
}

# command line package to be included for new-style nodename generation.
kernel_cmdline("nodenames-newgen") {
  args = [ "zircon.namegen=1" ]
}

# command line package to be included for old-style nodename generation.
kernel_cmdline("nodenames-oldgen") {
  args = [ "zircon.namegen=0" ]
}
