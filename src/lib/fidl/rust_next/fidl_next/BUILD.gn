# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/fidl/fidl.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")

rustc_library("fidl_next") {
  edition = "2021"
  sources = [
    "src/bind/buffer.rs",
    "src/bind/client.rs",
    "src/bind/endpoint.rs",
    "src/bind/method.rs",
    "src/bind/mod.rs",
    "src/bind/server.rs",
    "src/chunk.rs",
    "src/decode/error.rs",
    "src/decode/mod.rs",
    "src/decoder.rs",
    "src/encode/error.rs",
    "src/encode/mod.rs",
    "src/encoder.rs",
    "src/framework_error.rs",
    "src/lib.rs",
    "src/owned.rs",
    "src/protocol/buffer.rs",
    "src/protocol/client.rs",
    "src/protocol/error.rs",
    "src/protocol/lockers.rs",
    "src/protocol/mod.rs",
    "src/protocol/mpsc.rs",
    "src/protocol/server.rs",
    "src/protocol/transport.rs",
    "src/protocol/wire.rs",
    "src/slot.rs",
    "src/take.rs",
    "src/testing/mod.rs",
    "src/testing/transport.rs",
    "src/wire/boxed.rs",
    "src/wire/envelope.rs",
    "src/wire/framework_error.rs",
    "src/wire/mod.rs",
    "src/wire/ptr.rs",
    "src/wire/string/mod.rs",
    "src/wire/string/optional.rs",
    "src/wire/string/required.rs",
    "src/wire/table.rs",
    "src/wire/union.rs",
    "src/wire/vec/mod.rs",
    "src/wire/vec/optional.rs",
    "src/wire/vec/raw.rs",
    "src/wire/vec/required.rs",
  ]
  deps = [
    # Used for lock-free mpsc channel, but not for any APIs
    "//third_party/rust_crates:futures",

    # Meaningful dependencies
    "//third_party/rust_crates:bitflags",
    "//third_party/rust_crates:munge",
    "//third_party/rust_crates:rend",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:zerocopy",
  ]

  if (is_fuchsia) {
    sources += [
      "src/fuchsia/decoder.rs",
      "src/fuchsia/encoder.rs",
      "src/fuchsia/mod.rs",
      "src/fuchsia/transport/channel.rs",
      "src/fuchsia/transport/mod.rs",
      "src/fuchsia/wire/channel.rs",
      "src/fuchsia/wire/handle.rs",
      "src/fuchsia/wire/mod.rs",
    ]
    deps += [
      "//sdk/rust/zx",
      "//src/lib/fuchsia-async",
    ]
  }

  with_unit_tests = true
  test_deps = [ "//src/lib/fuchsia-async" ]

  # NOTE: this library is still experimental
  visibility = [
    ":*",
    "//:developer_universe_packages",
    "//tools/fidl/fidlc/testdata/*",
    "//tools/fidl/fidlgen_rust_next/*",
  ]
}

fuchsia_unittest_package("fidl_next_test_package") {
  deps = [ ":fidl_next_test" ]
}

group("tests") {
  testonly = true
  deps = [
    ":fidl_next_test($host_toolchain)",
    # TODO: fix and re-enable device-side tests.
    # ":fidl_next_test_package",
  ]
}
