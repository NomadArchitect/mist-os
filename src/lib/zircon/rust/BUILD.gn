# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/boot_tests/mistos_unittest_zbi.gni")

_common_sources = [
  "src/bti.rs",
  "src/channel.rs",
  "src/clock.rs",
  "src/clock_update.rs",
  "src/cprng.rs",
  "src/debuglog.rs",
  "src/event.rs",
  "src/eventpair.rs",
  "src/exception.rs",
  "src/fifo.rs",
  "src/futex.rs",
  "src/guest.rs",
  "src/handle.rs",
  "src/info.rs",
  "src/interrupt.rs",
  "src/iommu.rs",
  "src/job.rs",
  "src/lib.rs",
  "src/macros.rs",
  "src/name.rs",
  "src/pager.rs",
  "src/pmt.rs",
  "src/port.rs",
  "src/process.rs",
  "src/profile.rs",
  "src/property.rs",
  "src/resource.rs",
  "src/rights.rs",
  "src/signals.rs",
  "src/socket.rs",
  "src/stream.rs",
  "src/system.rs",
  "src/task.rs",
  "src/thread.rs",
  "src/time.rs",
  "src/vcpu.rs",
  "src/version.rs",
  "src/vmar.rs",
  "src/vmo.rs",
  "src/wait.rs",
]
_common_deps = [
  "//src/lib/zircon/rust/fuchsia-zircon-status",
  "//third_party/rust_crates:bitflags",
  "//third_party/rust_crates:bstr",
  "//third_party/rust_crates:static_assertions",
  "//third_party/rust_crates:zerocopy",
  "//zircon/vdso:fuchsia-zircon-sys",
]

if (is_fuchsia || is_mistos) {
  rustc_library("fuchsia-zircon") {
    version = "0.3.3"
    edition = "2021"
    sources = _common_sources
    deps = _common_deps
  }
}

# LINT.IfChange
rustc_library("fuchsia-cprng") {
  version = "0.1.1"
  edition = "2021"
  with_unit_tests = true
  visibility = [ ":*" ]
  source_root = "fuchsia-cprng/src/lib.rs"

  sources = [ "fuchsia-cprng/src/lib.rs" ]
}

# LINT.ThenChange(BUILD.bazel)

# Certain tests written as unit tests of fuchsia-zircon make use of other
# crates which themselves depend on fuchsia-zircon. This causes
# fuchsia_zircon::foo to be a different type from crate::foo in the context of
# those unit tests when fuchsia-zircon is built with `with_unit_tests = true`.
#
# Since those tests are really integration tests, we should either move them
# into the "other" crates so that the dependency graph flows in only one
# direction, or simply move those tests into a dedicated target and redesignate
# them as integration tests, which they appear to be.
#
# TODO(https://fxbug.dev/42173139): untangle this web.
rustc_test("fuchsia-zircon-unittests") {
  edition = "2021"
  output_name = "fuchsia_zircon_tests"
  sources = _common_sources
  deps = _common_deps + [
           ":fuchsia-zircon",
           "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_rust",
           "//src/lib/fdio/rust:fdio",
           "//src/lib/fuchsia",
           "//src/lib/fuchsia-component",
           "//src/lib/fuchsia-runtime",
           "//third_party/rust_crates:assert_matches",
           "//third_party/rust_crates:test-case",
         ]
}

rustc_binary("exit_with_code_util") {
  edition = "2021"
  source_root = "test_util/exit_with_code_util.rs"
  deps = [ ":fuchsia-zircon" ]

  sources = [ "test_util/exit_with_code_util.rs" ]
}

rustc_binary("sleep_forever_util") {
  edition = "2021"
  source_root = "test_util/sleep_forever_util.rs"
  deps = [ ":fuchsia-zircon" ]

  sources = [ "test_util/sleep_forever_util.rs" ]
}

fuchsia_unittest_component("fuchsia-cprng_test-component") {
  component_name = "fuchsia-cprng"
  deps = [ ":fuchsia-cprng_test" ]
}

fuchsia_unittest_component("fuchsia-zircon-tests-component") {
  component_name = "fuchsia-zircon-tests"
  manifest = "meta/fuchsia_zircon_tests.cml"
  deps = [ ":fuchsia-zircon-unittests" ]
  test_type = "system"
}

fuchsia_test_package("fuchsia-zircon-tests") {
  test_components = [
    ":fuchsia-cprng_test-component",
    ":fuchsia-zircon-tests-component",
  ]
  deps = [
    ":exit_with_code_util",
    ":sleep_forever_util",
  ]

  if (current_cpu == "riscv64") {
    # TODO(https://fxbug.dev/42081270): Remove this once
    # version::tests::get_version_string passes on RISC-V.
    test_specs = {
      environments = []
    }
  }
}

mistos_unittest_zbi("mistos-zircon-cprng-tests") {
  executable_path = "bin/fuchsia_cprng_lib_test"
  test_target_label = ":fuchsia-cprng_test"
  prefix = ""
}

mistos_unittest_zbi("mistos-zircon-unittests") {
  executable_path = "bin/fuchsia_zircon_tests"
  test_target_label = ":fuchsia-zircon-unittests"
  prefix = ""
  deps = [
    ":exit_with_code_util",
    ":sleep_forever_util",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":fuchsia-zircon-tests",
    "fuchsia-zircon-status:tests",
    "fuchsia-zircon-types:tests",
  ]
  if (is_mistos) {
    deps += [
      ":mistos-zircon-cprng-tests",
      ":mistos-zircon-unittests",
    ]
  }
}
