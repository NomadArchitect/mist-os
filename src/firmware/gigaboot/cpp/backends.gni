# Copyright 2022 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # Specifies the gn target that implements the required backends defined in
  # `gigaboot/cpp/backends.h`
  gigaboot_backends = "//src/firmware/gigaboot/cpp:backends_nuc"

  # Permanent attributes file for eng gigaboot
  gigaboot_eng_permanent_attributes = "//third_party/android/platform/external/avb/test/data/atx_permanent_attributes.bin"

  # Permanent attributes file for userdebug gigaboot. Setting this enables target
  # //src/firmware/gigaboot/cpp:userdebug-esp
  gigaboot_userdebug_permanent_attributes = ""

  # Permanent attributes file for prod-signed gigaboot. Setting this enables
  # target //src/firmware/gigaboot/cpp:user-esp
  gigaboot_user_permanent_attributes = ""

  # Path label to the GBL EFI app file.
  #
  # If non-empty, a `gbl-installer` target will be enabled which can be used by mkinstaller to
  # create a bootable installer image that uses GBL fastboot for bootstrapping NUC.
  #
  # Additionally, if `gigaboot_use_gbl` is set to true, the EFI app will also be embedded into
  # gigaboot and it will boot from it instead.
  #
  # The argument can be set via `fx set --args=...` or by directly modifying the `args.gn` file,
  # i.e. `out/default/args.gn`.
  gigaboot_gbl_efi_app = ""

  # Boolean to indicate whether to use GBL for boot.
  #
  # TODO(b/368647237): This is a temporary switch for enabling GBL based installer first before we
  # are ready to migrate gigaboot to use GBL.
  gigaboot_use_gbl = false
}
