// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "//sdk/lib/driver/compat/compat.shard.cml",
        "inspect/client.shard.cml",
        "syslog/client.shard.cml",
    ],
    program: {
        runner: "driver",
        bind: "meta/bind/sysmem.bindbc",
        colocate: "false",
        compat: "driver/sysmem.so",
    },
    capabilities: [
        { service: 'fuchsia.hardware.sysmem.Service' },
    ],
    use: [
        {
            protocol: [
                "fuchsia.boot.Arguments",
                "fuchsia.kernel.InfoResource",
                "fuchsia.kernel.MmioResource",
                "fuchsia.scheduler.RoleManager",
            ],
        },
        { service: "fuchsia.hardware.platform.device.Service" },
        {
            config: "fuchsia.sysmem.FixedContiguousMemorySize",
            key: "contiguous_memory_size",
            type: "int64",
            availability: "optional",
        },
        {
            config: "fuchsia.sysmem.PercentContiguousMemorySize",
            key: "contiguous_memory_size_percent",
            type: "int32",
            availability: "optional",
        },
        {
            config: "fuchsia.sysmem.FixedProtectedMemorySize",
            key: "protected_memory_size",
            type: "int64",
            availability: "optional",
        },
        {
            config: "fuchsia.sysmem.PercentProtectedMemorySize",
            key: "protected_memory_size_percent",
            type: "int32",
            availability: "optional",
        },
        {
            config: "fuchsia.sysmem.ContiguousGuardPagesUnused",
            key: "contiguous_guard_pages_unused",
            type: "bool",
            availability: "optional",
        },
    ],
    expose: [
        {
            service: 'fuchsia.hardware.sysmem.Service',
            from: 'self',
        },
    ],
    config: {
        // If value is less than 0 then it is ignored. The value is in bytes, and will be rounded up
        // to page size alignment. See contiguous_memory_size_percent for the default.
        contiguous_memory_size: { type: "int64" },

        // If value is less than 0 then it is ignored. The value is a percent of physical RAM, and
        // must be less than 100. If both this value and contiguous_memory_size are greater than or
        // equal to 0, contiguous_memory_size wins.
        contiguous_memory_size_percent: { type: "int32" },

        // If value is less than 0 then it is ignored. The value is in bytes, and will be rounded up
        // to page size alignment.
        protected_memory_size: { type: "int64" },

        // If value is less than 0 then it is ignored. The value is a percent of physical RAM, and
        // must be less than 100. If both this value and protected_memory_size are greater than or
        // equal to 0, protected_memory_size wins.
        protected_memory_size_percent: { type: "int32" },

        // If true, sysmem crashes on a guard page violation. The default is false.
        contiguous_guard_pages_fatal: { type: "bool" },

        // If true, sysmem will create guard regions around every allocation.
        contiguous_guard_pages_internal: { type: "bool" },

        // If true, sysmem will treat a fraction of currently-unused pages as guard pages and
        // attempt to loan the rest back to zircon. If false, sysmem will attempt to loan all
        // currently-unused pages back to zircon.
        //
        // Enabling this will enable periodic timers in sysmem which check unused pages for stray
        // DMA writes. The default is false to avoid the periodic timers by default. When true, on
        // detection of an improperly written page, sysmem will attempt to log debug info re.
        // allocations that previously used the page.
        contiguous_guard_pages_unused: { type: "bool" },

        // When contiguous_guard_pages_unused is true and this value is > 0,
        // 1/contiguous_guard_pages_unused_fraction_denominator currently-unused pages are not
        // loaned back to zircon, and instead become guard pages.
        //
        // Else if contiguous_guard_pages_unused is true but this value is <= 0, the fraction kept
        // as guard pages is 1/128. In other words the default is 128.
        //
        // Else if contiguous_guard_pages_unused is false, this value is ignored and all
        // currently-unused pages are loaned back to zircon.
        contiguous_guard_pages_unused_fraction_denominator: { type: "int32" },

        // If value is less than or equal to 0 then it is ignored. The default is one page.
        contiguous_guard_page_count: { type: "int32" },

        // If value is less or equal to 0 then it is ignored. The default is 600 seconds.
        contiguous_guard_pages_unused_cycle_seconds: { type: "int32" },

        // If set to true, dynamic protection / de-protection of pages of protected_memory_size is
        // disabled (for debugging purposes). The default is false. Disabling this will also prevent
        // any protected pages from being decommitted (aka loaned) back to zircon.
        protected_ranges_disable_dynamic: { type: "bool" },

        // TODO(b/322009732): remove
        deprecated_contiguous_memory_size_override: { type: "int64" },

        // TODO(b/322009732): remove
        deprecated_protected_memory_size_override: { type: "int64" },
    },
}
