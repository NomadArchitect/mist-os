# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/bind/bind.gni")
import("//build/components.gni")
import("//build/drivers.gni")
import("//build/fidl/fidl.gni")
import("//build/test.gni")

group("tests") {
  testonly = true
  deps = [ ":sysmem-unittest" ]
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
source_set("sysmem_common_srcs") {
  sources = [
    "allocator.cc",
    "buffer_collection.cc",
    "buffer_collection_token.cc",
    "buffer_collection_token_group.cc",
    "contiguous_pooled_memory_allocator.cc",
    "external_memory_allocator.cc",
    "indent.cc",
    "koid_util.cc",
    "logging.cc",
    "logical_buffer_collection.cc",
    "memory_allocator.cc",
    "node.cc",
    "node_properties.cc",
    "orphaned_node.cc",
    "protected_ranges.cc",
    "snapshot_annotation_register.cc",
    "sysmem.cc",
    "sysmem_metrics.cc",
    "usage_pixel_format_cost.cc",
    "utils.cc",
  ]
  public_deps = [
    ":fuchsia.sysmem2.internal_cpp",
    "//sdk/fidl/fuchsia.feedback:fuchsia.feedback_cpp",
    "//sdk/fidl/fuchsia.hardware.platform.device:fuchsia.hardware.platform.device_cpp",
    "//sdk/fidl/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_bindlib_cpp",
    "//sdk/fidl/fuchsia.hardware.sysmem:fuchsia.hardware.sysmem_cpp",
    "//sdk/fidl/fuchsia.inspect:fuchsia.inspect_cpp",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_cpp",
    "//sdk/fidl/fuchsia.logger:fuchsia.logger_cpp",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp",
    "//sdk/fidl/fuchsia.sysmem2:fuchsia.sysmem2_cpp",
    "//sdk/lib/async_patterns/cpp",
    "//sdk/lib/component/outgoing/cpp",
    "//sdk/lib/fidl",
    "//sdk/lib/fit",
    "//sdk/lib/syslog/cpp",
    "//src/devices/bind/fuchsia.sysmem.heap:fuchsia.sysmem.heap_cpp",
    "//src/devices/sysmem/bin/sysmem_connector:config_cpp_elf_lib",
    "//src/devices/sysmem/metrics",
    "//src/lib/memory_barriers",
    "//src/lib/metrics_buffer",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/closure-queue",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/inspect",
    "//zircon/system/ulib/region-alloc",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/sysmem-version",
    "//zircon/system/ulib/trace",
    "//zircon/system/ulib/zx",
    "//zircon/third_party/ulib/safemath",
  ]

  deps = [
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/region-alloc",
  ]
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
test("sysmem-unittest-bin") {
  if (is_fuchsia) {
    fdio_config = [ "//build/config/fuchsia:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
    configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  }
  if (is_mistos) {
    fdio_config = [ "//build/config/mistos:fdio_config" ]
    if (configs + fdio_config - fdio_config != configs) {
      configs -= fdio_config
    }
  }
  output_name = "sysmem-unittest"
  sources = [
    "test/contiguous_pooled_memory_allocator_test.cc",
    "test/device_test.cc",
    "test/pixel_format_cost_test.cc",
    "test/protected_ranges_test.cc",
  ]
  include_dirs = [ "." ]
  deps = [
    ":sysmem_common_srcs",
    "//sdk/fidl/fuchsia.sysmem:fuchsia.sysmem_cpp",
    "//sdk/lib/async_patterns/testing/cpp",
    "//sdk/lib/fidl",
    "//sdk/lib/fit",
    "//src/devices/bus/testing/fake-pdev",
    "//src/devices/sysmem/bin/sysmem_connector:config_cpp_elf_lib",
    "//src/devices/testing/fake-bti",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/predicates",
    "//third_party/googletest:gtest",
    "//zircon/system/ulib/async:async-cpp",
    "//zircon/system/ulib/async-default",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/async-testing",
    "//zircon/system/ulib/closure-queue",
    "//zircon/system/ulib/fbl",
    "//zircon/system/ulib/image-format",
    "//zircon/system/ulib/region-alloc",
    "//zircon/system/ulib/sync",
    "//zircon/system/ulib/sysmem-version",
    "//zircon/system/ulib/zx",
    "//zircon/third_party/ulib/safemath",
  ]
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
template("test_format_costs_file") {
  resource(target_name) {
    _input = invoker.format_costs
    deps = [ _input ]
    sources =
        [ get_label_info(_input, "target_out_dir") + "/" +
          get_label_info(_input, "name") + ".format_costs_persistent_fidl" ]
    outputs = "data/format_costs/" + get_label_info(_input, "name") +
              ".format_costs_persistent_fidl"
  }
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
test_format_costs_file("test_format_costs_arm_mali") {
  format_costs = "//src/devices/sysmem/format_costs/arm_mali"
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
test_format_costs_file("test_format_costs_intel") {
  format_costs = "//src/devices/sysmem/format_costs/intel"
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
test_format_costs_file("test_format_costs_video_decoder_nv12") {
  format_costs = "//src/devices/sysmem/format_costs/video_decoder_nv12"
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
fuchsia_unittest_package("sysmem-unittest") {
  deps = [
    ":sysmem-unittest-bin",
    ":test_format_costs_arm_mali",
    ":test_format_costs_intel",
    ":test_format_costs_video_decoder_nv12",
  ]
  test_specs = {
    log_settings = {
      max_severity = "ERROR"
    }
  }
}

# TODO(b/362587923): Move to src/devices/sysmem/bin/sysmem_connector's BUILD.gn,
# but that file will be at src/sysmem or src/bringup/bin/sysmem.
fidl("fuchsia.sysmem2.internal") {
  sdk_category = "internal"
  api = "fuchsia.sysmem2.internal.api"
  sources = [ "combined_token.fidl" ]
  public_deps = [
    "//sdk/fidl/fuchsia.sysmem",
    "//sdk/fidl/fuchsia.sysmem2",
  ]
}
