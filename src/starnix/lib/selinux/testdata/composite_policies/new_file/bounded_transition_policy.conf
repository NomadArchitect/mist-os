# Use `typebounds` statement to express permissions constraints between two types, and
# provide them with `setcurrent` and `dyntransition` permissions, to allow enforcement of the
# type bounds on multi-threaded dynamic transitions to be validated.

type unbounded_t;
type bounded_t;

typebounds unbounded_t bounded_t;

role test_r;
role test_r types { unbounded_t bounded_t };

user test_u roles { test_r } level s0 range s0;

allow unbounded_t self:process { setcurrent dyntransition };
allow bounded_t self:process { setcurrent };
allow bounded_t unbounded_t:process { dyntransition };
allow unbounded_t bounded_t:process { dyntransition };
