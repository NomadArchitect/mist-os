// Copyright 2021 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    include: [
        "inspect/client.shard.cml",

        // TODO(b/345827642): Use regular shards
        // once Chromium migrates to dictionaries.
        "syslog/shards/offer.shard.cml",
        "syslog/shards/use.shard.cml",
        "trace/client.shard.cml",
    ],
    program: {
        runner: "elf",
        binary: "bin/codec_factory",
    },
    collections: [
        {
            name: "sw-codecs",

            // every component started in this collection will self-destruct when
            // it exits
            durability: "single_run",
        },
        {
            name: "magma-codecs",

            // every component started in this collection will self-destruct when
            // it exits
            durability: "single_run",
        },
    ],
    capabilities: [
        { protocol: "fuchsia.mediacodec.CodecFactory" },
    ],
    use: [
        {
            directory: "dev-mediacodec",
            rights: [ "r*" ],
            path: "/dev/class/media-codec",
        },
        {
            directory: "dev-gpu",
            rights: [ "r*" ],
            path: "/dev/class/gpu",
        },
        {
            protocol: [
                "fuchsia.metrics.MetricEventLoggerFactory",
                "fuchsia.sysinfo.SysInfo",
            ],
        },
        {
            protocol: "fuchsia.component.Realm",
            from: "framework",
        },
    ],
    offer: [
        {
            protocol: [
                "fuchsia.sysmem.Allocator",
                "fuchsia.sysmem2.Allocator",
            ],
            from: "parent",
            to: [
                "#magma-codecs",
                "#sw-codecs",
            ],
        },
        {
            directory: "dev-gpu",
            from: "parent",
            to: "#magma-codecs",
        },
        {
            dictionary: "diagnostics",
            from: "parent",
            to: "all",
        },
    ],
    expose: [
        {
            protocol: "fuchsia.mediacodec.CodecFactory",
            from: "self",
        },
    ],
}
