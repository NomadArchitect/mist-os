# Copyright 2024 The Fuchsia Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components/fuchsia_test.gni")
import("//build/components/fuchsia_test_component.gni")
import("//build/components/fuchsia_test_package.gni")
import("//build/test.gni")
import("//src/lib/android/aidl/aidl.gni")

group("tests") {
  testonly = true
  deps = [ ":binder_rpc_inet_test" ]
}

aidl_cpp("binder_echo") {
  base = "."
  interfaces = [ "IBinderEcho.aidl" ]
}

test("binder_rpc_inet_test_bin") {
  sources = [
    "binder_rpc_test_inet.cc",
    "main.cc",
  ]
  deps = [
    ":binder_echo",
    "//sdk/lib/component/incoming/cpp",
    "//sdk/lib/syslog/cpp",
    "//src/lib/android/binder",
    "//src/lib/fxl:cli",
    "//src/tee/lib/dev_urandom_compat",
    "//third_party/googletest:gtest",
  ]
}

executable("binder_rpc_test_server_inet") {
  sources = [ "binder_rpc_test_server_inet.cc" ]
  deps = [
    ":binder_echo",
    "//sdk/lib/syslog/cpp",
    "//src/lib/android/binder",
    "//src/tee/lib/dev_urandom_compat",
  ]
}

fuchsia_component("binder_rpc_inet_test_component") {
  testonly = true
  manifest = "meta/binder_rpc_inet_test.cml"
  component_name = "binder_rpc_inet_test"
  deps = [ ":binder_rpc_inet_test_bin" ]
}

fuchsia_component("binder_rpc_test_server_inet_component") {
  testonly = true
  manifest = "meta/binder_rpc_test_server_inet.cml"
  component_name = "binder_rpc_test_server_inet"
  deps = [ ":binder_rpc_test_server_inet" ]
}

fuchsia_test_component("binder_rpc_test_root") {
  manifest = "meta/binder_rpc_test_root.cml"
}

fuchsia_package("netstack_package") {
  package_name = "netstack"
  testonly = true
  deps = [ "//src/connectivity/network/netstack3:component-debug" ]
}

fuchsia_test_package("binder_rpc_inet_test") {
  test_components = [ ":binder_rpc_test_root" ]
  deps = [
    ":binder_rpc_inet_test_component",
    ":binder_rpc_test_server_inet_component",
  ]
  test_specs = {
    log_settings = {
      # Binder RPC detailed logging is at ERROR level.
      max_severity = "ERROR"
    }
  }
  subpackages = [ ":netstack_package" ]
}
