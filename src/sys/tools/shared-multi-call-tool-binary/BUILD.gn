# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")

rustc_binary("shared-multi-call-tool-binary") {
  visibility = [
    ":*",
    "../component:*",
    "../package:*",
    "../starnix:*",
  ]
  edition = "2021"

  deps = [
    "//src/lib/fuchsia",
    "//src/sys/tools/component",
    "//src/sys/tools/package",
    "//src/sys/tools/starnix",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
  ]

  # This is only used in eng products, not production.
  deps += [ "//build/validate:non_production_tag" ]

  sources = [ "src/main.rs" ]
  configs += [
    "//build/config/rust/lints:clippy_warn_all",

    # This binary is a part of the bootfs image, so attempt to minimize its size impact.
    "//build/config/rust:bootfs",
  ]

  if (is_mistos) {
    # Statically link rust standard library
    # TODO(https://fxbug.dev/42163719): Dynamically link once this is in a bootfs_package.
    configs += [ "//build/config/mistos:dynamic_rust_standard_library" ]
    configs -= [ "//build/config/mistos:dynamic_rust_standard_library" ]
    configs += [ "//build/config/mistos:static_rust_standard_library" ]
  } else {
    # Statically link rust standard library
    # TODO(https://fxbug.dev/42163719): Dynamically link once this is in a bootfs_package.
    configs += [ "//build/config/fuchsia:dynamic_rust_standard_library" ]
    configs -= [ "//build/config/fuchsia:dynamic_rust_standard_library" ]
    configs += [ "//build/config/fuchsia:static_rust_standard_library" ]
  }
}
