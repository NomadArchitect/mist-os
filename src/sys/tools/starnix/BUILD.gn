# Copyright 2024 Mist Tecnologia LTDA All rights reserved.
# Copyright 2023 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dist/renamed_binary.gni")
import("//build/rust/rustc_library.gni")

# `starnix` is conceptually a binary, but it is built as a lib here so it can be
# aggregated into //src/sys/tools/shared-multi-call-tool-binary to save disk space.
rustc_library("starnix") {
  visibility = [
    ":*",
    "../shared-multi-call-tool-binary:*",
  ]
  edition = "2021"

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.starnix.container:fuchsia.starnix.container_rust",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2_rust",
    "//sdk/rust/zx",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-fs",
    "//src/sys/lib/component_debug",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:argh",
    "//third_party/rust_crates:futures",
  ]

  # The component tool is only used for debugging.
  deps += [ "//build/validate:non_production_tag" ]

  # This is a part of the bootfs image, so attempt to minimize its size impact.
  configs += [ "//build/config/rust:bootfs" ]

  if (is_mistos) {
    configs += [ "//build/config/fuchsia:mistos_config" ]
  }

  features = []

  #if (starnix_enable_console_tool) {
  if (true) {
    features += [ "enable_console_tool" ]
  }

  #if (starnix_enable_console_tool) {
  if (true) {
    deps += [
      "//third_party/rust_crates:blocking",
      "//third_party/rust_crates:nix",
      "//third_party/rust_crates:termion",
    ]
  }

  sources = [
    "src/common.rs",
    "src/console.rs",
    "src/lib.rs",
  ]
}

renamed_binary("component-binary") {
  source = "$root_out_dir/shared-multi-call-tool-binary"
  source_deps = [ "//src/sys/tools/shared-multi-call-tool-binary" ]
  dest = "bin/starnix"
}
