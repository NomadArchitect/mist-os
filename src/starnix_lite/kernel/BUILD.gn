# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_macro.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/boot_tests/kernel_zbi_test.gni")
import("//build/testing/boot_tests/mistos_unittest_zbi.gni")
import("//build/testing/bootfs_test.gni")
import("//build/zbi/kernel_cmdline.gni")
import("//build/zbi/zbi.gni")
import("//build/zbi/zbi_input.gni")
import("//src/starnix/kernel/args.gni")
import("//src/starnix/kernel/starnix.gni")
import("//tools/protobuf/rust_proto_library.gni")

group("kernel") {
  deps = [ ":starnix_lite_kernel_zbi" ]
}

group("tests") {
  testonly = true

  deps = [
    ":starnix_lite-tests",
    ":starnix_lite_kernel_bin-tests",
    ":starnix_lite_kernel_runner-tests",
  ]
}

rustc_binary("starnix_lite_kernel_bin") {
  name = "starnix_lite_kernel"
  edition = "2021"
  with_unit_tests = true

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  configs += [ "//build/config/mistos:mistos_config" ]

  source_root = "main.rs"
  deps = [
    ":starnix_lite_core",
    ":starnix_lite_kernel_config",
    ":starnix_lite_kernel_runner",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_rust",
    "//sdk/fidl/fuchsia.time:fuchsia.time_rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-fs",
    "//src/lib/fuchsia-runtime",
    "//src/lib/fuchsia-sync",
    "//src/lib/mistos-logger",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/starnix/kernel:starnix_logging",
    "//src/storage/lib/vfs/rust:vfs",
    "//src/sys/component_manager/lib/builtins",
    "//src/sys/lib/fuchsia-bootfs",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
    "//third_party/rust_crates:tracing-mutex",
  ]

  test_deps = [ "//src/lib/fuchsia" ]

  non_rust_deps = [ ":restricted_trampoline" ]

  sources = [
    "bootfs.rs",
    "builtin/mod.rs",
    "builtin/svc_controller.rs",
    "builtin/time.rs",
    "main.rs",
  ]

  features = [ "starnix_lite" ]

  configs += [ "//build/config/rust/lints:clippy_warn_all" ]
  configs += [ "//src/starnix/config:starnix_clippy_lints" ]

  disable_rustdoc = false
}

rustc_library("starnix_lite_core") {
  name = "starnix_core"
  edition = "2021"
  version = "0.1.0"
  with_unit_tests = true
  source_root = "lib.rs"

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  configs += [ "//build/config/mistos:mistos_config" ]

  sources = [
    "arch/${current_cpu}/execution.rs",
    "arch/${current_cpu}/loader.rs",
    "arch/${current_cpu}/mod.rs",
    "arch/${current_cpu}/registers.rs",
    "arch/${current_cpu}/signal_handling.rs",
    "arch/${current_cpu}/syscalls.rs",
    "arch/${current_cpu}/task.rs",
    "arch/mod.rs",
    "device/device_init.rs",
    "device/device_mapper.rs",
    "device/kobject.rs",
    "device/loop_device.rs",
    "device/mem.rs",
    "device/mod.rs",
    "device/registry.rs",
    "device/remote_block_device.rs",
    "device/sync_file.rs",
    "device/terminal.rs",
    "device/tun.rs",
    "device/zram.rs",
    "dynamic_thread_spawner.rs",
    "execution/mod.rs",
    "execution/restricted_executor.rs",
    "execution/shared.rs",
    "fs/devpts.rs",
    "fs/devtmpfs.rs",
    "fs/ext4/mod.rs",
    "fs/ext4/pager.rs",
    "fs/fuchsia/mod.rs",
    "fs/fuchsia/remote.rs",
    "fs/fuchsia/remote_bundle.rs",
    "fs/fuchsia/syslog.rs",
    "fs/fuchsia/timer.rs",
    "fs/fuchsia/zxio.rs",
    "fs/functionfs.rs",
    "fs/layeredfs.rs",
    "fs/mod.rs",
    "fs/nmfs/fs.rs",
    "fs/nmfs/manager.rs",
    "fs/nmfs/mod.rs",
    "fs/overlayfs.rs",
    "fs/proc/fs.rs",
    "fs/proc/mod.rs",
    "fs/proc/pid_directory.rs",
    "fs/proc/proc_directory.rs",
    "fs/proc/sysctl.rs",
    "fs/proc/sysrq.rs",
    "fs/sysfs/bus_collection_directory.rs",
    "fs/sysfs/cgroup.rs",
    "fs/sysfs/class_collection_directory.rs",
    "fs/sysfs/cpu_class_directory.rs",
    "fs/sysfs/device_directory.rs",
    "fs/sysfs/fs.rs",
    "fs/sysfs/kernel_directory.rs",
    "fs/sysfs/mod.rs",
    "fs/sysfs/power_directory.rs",
    "fs/sysfs/sys_fs_directory.rs",
    "fs/tmpfs.rs",
    "fs/tracefs/fs.rs",
    "fs/tracefs/mod.rs",
    "fs/tracefs/tracing_directory.rs",
    "lib.rs",
    "loader.rs",
    "memory_attribution/mod.rs",
    "memory_attribution/sync.rs",
    "mm/futex_table.rs",
    "mm/memory.rs",
    "mm/memory_manager.rs",
    "mm/mod.rs",
    "mm/syscalls.rs",
    "mm/vmar.rs",
    "mm/vmex_resource.rs",
    "mm/vmsplice.rs",
    "mutable_state.rs",
    "power/listener.rs",
    "power/manager.rs",
    "power/mod.rs",
    "power/state.rs",
    "power/suspend_stats.rs",
    "power/sync_on_suspend.rs",
    "power/wakeup_count.rs",
    "security/hooks.rs",
    "security/mod.rs",
    "security/selinux_hooks/fs.rs",
    "security/selinux_hooks/mod.rs",
    "signals/mod.rs",
    "signals/signal_handling.rs",
    "signals/signalfd.rs",
    "signals/syscalls.rs",
    "signals/types.rs",
    "syscalls/misc.rs",
    "syscalls/mod.rs",
    "syscalls/table.rs",
    "syscalls/time.rs",
    "task/abstract_socket_namespace.rs",
    "task/current_task.rs",
    "task/hr_timer_manager.rs",
    "task/interval_timer.rs",
    "task/iptables.rs",
    "task/kernel.rs",
    "task/kernel_stats.rs",
    "task/kernel_threads.rs",
    "task/mod.rs",
    "task/net.rs",
    "task/pid_table.rs",
    "task/process_group.rs",
    "task/ptrace.rs",
    "task/scheduler.rs",
    "task/seccomp.rs",
    "task/session.rs",
    "task/syscalls.rs",
    "task/syslog.rs",
    "task/task.rs",
    "task/thread_group.rs",
    "task/timers.rs",
    "task/uts_namespace.rs",
    "task/waiter.rs",
    "testing.rs",
    "time/mod.rs",
    "time/utc.rs",
    "timer/mod.rs",
    "vfs/aio.rs",
    "vfs/anon_node.rs",
    "vfs/buffers/io_buffers.rs",
    "vfs/buffers/message_queue.rs",
    "vfs/buffers/message_types.rs",
    "vfs/buffers/mod.rs",
    "vfs/dir_entry.rs",
    "vfs/directory_file.rs",
    "vfs/dirent_sink.rs",
    "vfs/dynamic_file.rs",
    "vfs/epoll.rs",
    "vfs/eventfd.rs",
    "vfs/fd_number.rs",
    "vfs/fd_table.rs",
    "vfs/file_object.rs",
    "vfs/file_server.rs",
    "vfs/file_system/file_system.rs",
    "vfs/file_system/mod.rs",
    "vfs/file_write_guard.rs",
    "vfs/fs_args.rs",
    "vfs/fs_context.rs",
    "vfs/fs_node.rs",
    "vfs/fsverity.rs",
    "vfs/fuse.rs",
    "vfs/inotify.rs",
    "vfs/memory_file.rs",
    "vfs/mod.rs",
    "vfs/namespace.rs",
    "vfs/path.rs",
    "vfs/pidfd.rs",
    "vfs/pipe.rs",
    "vfs/record_locks.rs",
    "vfs/rw_queue.rs",
    "vfs/simple_file.rs",
    "vfs/socket/iptables_utils.rs",
    "vfs/socket/mod.rs",
    "vfs/socket/socket.rs",
    "vfs/socket/socket_backed_by_zxio.rs",
    "vfs/socket/socket_file.rs",
    "vfs/socket/socket_fs.rs",
    "vfs/socket/socket_generic_netlink/messages.rs",
    "vfs/socket/socket_generic_netlink/mod.rs",
    "vfs/socket/socket_generic_netlink/taskstats.rs",
    "vfs/socket/socket_netlink.rs",
    "vfs/socket/socket_types.rs",
    "vfs/socket/socket_unix.rs",
    "vfs/socket/socket_vsock.rs",
    "vfs/socket/syscalls.rs",
    "vfs/splice.rs",
    "vfs/static_directory.rs",
    "vfs/stubs.rs",
    "vfs/symlink_node.rs",
    "vfs/syscalls.rs",
    "vfs/vec_directory.rs",
    "vfs/wd_number.rs",
    "vfs/xattr.rs",
  ]

  deps = [
    "//sdk/fidl/fuchsia.buildinfo:fuchsia.buildinfo_rust",
    "//sdk/fidl/fuchsia.diagnostics:fuchsia.diagnostics_rust",
    "//sdk/fidl/fuchsia.fs:fuchsia.fs_rust",
    "//sdk/fidl/fuchsia.hardware.adb:fuchsia.hardware.adb_rust",
    "//sdk/fidl/fuchsia.hardware.hrtimer:fuchsia.hardware.hrtimer_rust",
    "//sdk/fidl/fuchsia.hardware.network:fuchsia.hardware.network_rust",
    "//sdk/fidl/fuchsia.hardware.power.statecontrol:fuchsia.hardware.power.statecontrol_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_rust",
    "//sdk/fidl/fuchsia.memory.attribution:fuchsia.memory.attribution_rust",
    "//sdk/fidl/fuchsia.net:fuchsia.net_rust",
    "//sdk/fidl/fuchsia.net.filter:fuchsia.net.filter_rust",
    "//sdk/fidl/fuchsia.net.interfaces.admin:fuchsia.net.interfaces.admin_rust",
    "//sdk/fidl/fuchsia.net.tun:fuchsia.net.tun_rust",
    "//sdk/fidl/fuchsia.posix.socket:fuchsia.posix.socket_rust",
    "//sdk/fidl/fuchsia.posix.socket.packet:fuchsia.posix.socket.packet_rust",
    "//sdk/fidl/fuchsia.posix.socket.raw:fuchsia.posix.socket.raw_rust",
    "//sdk/fidl/fuchsia.power.broker:fuchsia.power.broker_rust",
    "//sdk/fidl/fuchsia.power.suspend:fuchsia.power.suspend_rust",
    "//sdk/fidl/fuchsia.power.system:fuchsia.power.system_rust",
    "//sdk/fidl/fuchsia.process:fuchsia.process_rust",
    "//sdk/fidl/fuchsia.scheduler:fuchsia.scheduler_rust",
    "//sdk/fidl/fuchsia.session.power:fuchsia.session.power_rust",
    "//sdk/fidl/fuchsia.sysinfo:fuchsia.sysinfo_rust",
    "//src/connectivity/lib/net-types",
    "//src/connectivity/network/netlink",
    "//src/lib/async-utils",
    "//src/lib/debug/rust",
    "//src/lib/dense-map",
    "//src/lib/diagnostics/data/rust",
    "//src/lib/diagnostics/inspect/contrib/rust",
    "//src/lib/diagnostics/inspect/derive",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/mundane",
    "//src/lib/network/fidl_fuchsia_net_filter_ext",
    "//src/lib/network/fidl_fuchsia_net_interfaces_ext",
    "//src/lib/process_builder",
    "//src/lib/trace/rust:trace",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/performance/memory/attribution/server",
    "//src/starnix/kernel:starnix_lifecycle",
    "//src/starnix/kernel:starnix_logging",
    "//src/starnix/kernel:starnix_sync",
    "//src/starnix/lib/extended_pstate:lib",
    "//src/starnix/lib/filter_methods_macro",
    "//src/starnix/lib/linux_uapi",
    "//src/starnix/lib/range_map",
    "//src/starnix/lib/selinux/common",
    "//src/starnix/lib/selinux/core",
    "//src/starnix/lib/selinux/policy",
    "//src/starnix/lib/starnix-syscalls",
    "//src/starnix/lib/starnix-uapi",
    "//src/starnix/lib/syncio",
    "//src/starnix/lib/usercopy",
    "//src/storage/ext4/lib/metadata",
    "//src/storage/ext4/read-only:ext4-read-only",
    "//src/storage/lib/fsverity-merkle",
    "//src/storage/lib/vfs/rust:vfs",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:assert_matches",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:bit-vec",
    "//third_party/rust_crates:bitflags",
    "//third_party/rust_crates:bstr",
    "//third_party/rust_crates:byteorder",
    "//third_party/rust_crates:derivative",
    "//third_party/rust_crates:dyn-clone",
    "//third_party/rust_crates:fragile",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:hex",
    "//third_party/rust_crates:itertools",
    "//third_party/rust_crates:linked-hash-map",
    "//third_party/rust_crates:lock_api",
    "//third_party/rust_crates:macro_rules_attribute",
    "//third_party/rust_crates:maplit",
    "//third_party/rust_crates:memchr",
    "//third_party/rust_crates:memoffset",
    "//third_party/rust_crates:netlink-packet-core",
    "//third_party/rust_crates:netlink-packet-generic",
    "//third_party/rust_crates:netlink-packet-route",
    "//third_party/rust_crates:netlink-packet-utils",
    "//third_party/rust_crates:nom",
    "//third_party/rust_crates:num-derive",
    "//third_party/rust_crates:num-traits",
    "//third_party/rust_crates:once_cell",
    "//third_party/rust_crates:paste",
    "//third_party/rust_crates:pin-project",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:ref-cast",
    "//third_party/rust_crates:regex",
    "//third_party/rust_crates:scopeguard",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:smallvec",
    "//third_party/rust_crates:static_assertions",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing-mutex",
    "//third_party/rust_crates:utf8parse",
    "//third_party/rust_crates:zerocopy",
  ]

  test_deps = [
    "//src/connectivity/lib/net-declare",
    "//src/lib/const-unwrap",
    "//src/lib/diagnostics/testing/diagnostics-assertions/rust:diagnostics-assertions",
    "//src/lib/fuchsia",
    "//src/lib/fuchsia-fs",
    "//src/lib/test_util",
    "//src/storage/ext4/tests:test_img",
    "//src/storage/fxfs/platform:fxfs-testing",
    "//third_party/rust_crates:assert_matches",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:test-case",
    "//third_party/rust_crates:tracing-mutex",
  ]

  features = []
  if (is_mistos) {
    features += [ "starnix_lite" ]
  }
  if (starnix_syscall_stats) {
    features += [ "syscall_stats" ]
  }
  if (starnix_unified_aspace) {
    features += [ "unified_aspace" ]
  }
  if (starnix_enable_alternate_anon_allocs) {
    features += [ "alternate_anon_allocs" ]
  }

  inputs = [ "//src/starnix_lite/lib/selinux/testdata/micro_policies/hooks_tests_policy.pp" ]
  configs += [ "//src/starnix/config:starnix_clippy_lints" ]
}

rustc_library("starnix_lite_kernel_runner") {
  name = "starnix_lite_kernel_runner"
  edition = "2021"
  version = "0.1.0"
  with_unit_tests = true
  source_root = "standalone_runner/lib.rs"

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  configs += [ "//build/config/mistos:mistos_config" ]

  sources = [
    "standalone_runner/container.rs",
    "standalone_runner/features.rs",
    "standalone_runner/lib.rs",
  ]

  deps = [
    ":starnix_lite_core",
    ":starnix_lite_kernel_config",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.scheduler:fuchsia.scheduler_rust",
    "//src/lib/diagnostics/inspect/contrib/rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-runtime",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/starnix/kernel:starnix_logging",
    "//src/starnix/kernel:starnix_sync",
    "//src/starnix/lib/selinux/core",
    "//src/starnix/lib/starnix-uapi",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:bstr",
    "//third_party/rust_crates:futures",
  ]

  test_deps = [ "//src/lib/fuchsia" ]

  configs += [ "//src/starnix/config:starnix_clippy_lints" ]
}

static_library("restricted_trampoline") {
  sources = [ "execution/trampoline_${current_cpu}.S" ]
}

# Components

# The starnix kernel manifest, used by all containers.
fuchsia_component_manifest("starnix_lite_kernel_manifest") {
  manifest = "meta/starnix_lite_kernel.cml"
  component_name = "starnix_lite_kernel"
}

# The starnix kernel configuration library, used by the Rust binary to parse configuration.
fuchsia_structured_config_rust_lib("starnix_lite_kernel_config") {
  cm_label = ":starnix_lite_kernel_manifest"
}

# ZBIs

kernel_cmdline("starnix_lite-zbi-cmdline") {
  args = [
    "userboot.next.root=/",
    "userboot.next=bin/starnix_lite_kernel",
  ]
}

zbi("starnix_lite_kernel_zbi") {
  deps = [ "//zircon/kernel" ]
  deps += [
    ":starnix_lite-zbi-cmdline",
    ":starnix_lite_kernel_bin",
    "//build/info/bootfs:minimum_utc_stamp",

    #"//src/starnix/examples/hello_starnix:bin",
    "//examples/nolibc:linux-bin",
    "//src/starnix/containers:default_init",
    "//src/starnix/containers/mistos:container_resources",
  ]

  output_name = "starnix_lite_kernel"
  output_dir = root_out_dir
  output_extension = "zbi"
  output_path =
      rebase_path("$output_dir/$target_name.$output_extension", root_build_dir)

  metadata = {
    # For the //:images build_api_module().
    images = [
      {
        label = get_label_info(":$target_name", "label_with_toolchain")
        name = "$target_name"
        tags = [ "incomplete" ]
        type = "zbi"
        path = output_path
        cpu = current_cpu
      },
    ]
  }
}

mistos_unittest_zbi("starnix_lite-tests") {
  executable_path = "bin/starnix_core_lib_test"
  test_target_label = ":starnix_lite_core_test"
  deps = [
    "//src/starnix/examples/hello_starnix:bin",
    "//src/starnix/kernel:starnix-test-files",
  ]
}

mistos_unittest_zbi("starnix_lite_kernel_bin-tests") {
  executable_path = "bin/starnix_lite_kernel_bin_test"
  test_target_label = ":starnix_lite_kernel_bin_test"
}

mistos_unittest_zbi("starnix_lite_kernel_runner-tests") {
  executable_path = "bin/starnix_lite_kernel_runner_lib_test"
  test_target_label = ":starnix_lite_kernel_runner_test"
}
