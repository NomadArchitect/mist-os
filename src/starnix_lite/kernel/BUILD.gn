# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Copyright 2021 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/components.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_macro.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/boot_tests/kernel_zbi_test.gni")
import("//build/testing/boot_tests/mistos_unittest_zbi.gni")
import("//build/testing/bootfs_test.gni")
import("//build/zbi/kernel_cmdline.gni")
import("//build/zbi/zbi.gni")
import("//build/zbi/zbi_input.gni")
import("//src/starnix/kernel/args.gni")
import("//src/starnix/kernel/starnix.gni")
import("//tools/protobuf/rust_proto_library.gni")

group("kernel") {
  deps = [ ":starnix_lite_kernel_zbi" ]
}

group("tests") {
  testonly = true

  deps = [
    ":starnix_lite-tests",
    ":starnix_lite_kernel_bin-tests",
    ":starnix_lite_kernel_runner-tests",
  ]
}

rustc_binary("starnix_lite_kernel_bin") {
  name = "starnix_lite_kernel"
  edition = "2021"
  with_unit_tests = true

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  configs += [ "//build/config/mistos:mistos_config" ]

  source_root = "main.rs"
  deps = [
    ":starnix_lite_kernel_runner",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_rust",
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.kernel:fuchsia.kernel_rust",
    "//sdk/fidl/fuchsia.time:fuchsia.time_rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-fs",
    "//src/lib/fuchsia-runtime",
    "//src/lib/fuchsia-sync",
    "//src/lib/mistos-logger",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/starnix/kernel:starnix_core",
    "//src/starnix/kernel:starnix_logging",
    "//src/storage/lib/vfs/rust:vfs",
    "//src/sys/component_manager/lib/builtins",
    "//src/sys/lib/fuchsia-bootfs",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-lock",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:tracing",
    "//third_party/rust_crates:tracing-mutex",
  ]

  test_deps = [ "//src/lib/fuchsia" ]

  sources = [
    "bootfs.rs",
    "builtin/mod.rs",
    "builtin/svc_controller.rs",
    "builtin/time.rs",
    "main.rs",
  ]

  features = [ "starnix_lite" ]

  configs += [ "//build/config/rust/lints:clippy_warn_all" ]
  configs += [ "//src/starnix/config:starnix_clippy_lints" ]

  disable_rustdoc = false
}

rustc_library("starnix_lite_kernel_runner") {
  name = "starnix_lite_kernel_runner"
  edition = "2021"
  version = "0.1.0"
  with_unit_tests = true
  source_root = "standalone_runner/lib.rs"

  # TODO(https://fxbug.dev/42059075): Re-enable starnix in these environments.
  exclude_toolchain_tags = [
    "asan",
    "hwasan",
  ]

  configs += [ "//build/config/mistos:mistos_config" ]

  sources = [
    "standalone_runner/component_runner.rs",
    "standalone_runner/container.rs",
    "standalone_runner/features.rs",
    "standalone_runner/lib.rs",
    "standalone_runner/mounts.rs",
  ]

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io_rust",
    "//sdk/fidl/fuchsia.process:fuchsia.process_rust",
    "//src/lib/diagnostics/inspect/contrib/rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-runtime",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/starnix/kernel:starnix_core",
    "//src/starnix/kernel:starnix_logging",
    "//src/starnix/lib/selinux",
    "//src/starnix/lib/starnix-sync",
    "//src/starnix/lib/starnix-uapi",
    "//src/starnix/modules",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:bstr",
    "//third_party/rust_crates:futures",
  ]

  test_deps = [ "//src/lib/fuchsia" ]

  configs += [ "//src/starnix/config:starnix_clippy_lints" ]
}

# Components

# ZBIs

kernel_cmdline("starnix_lite-zbi-cmdline") {
  args = [
    "userboot.next.root=/",
    "userboot.next=bin/starnix_lite_kernel",
    "kernel.vdso.always_use_next=true",
  ]
}

zbi("starnix_lite_kernel_zbi") {
  deps = [ "//zircon/kernel" ]
  deps += [
    ":starnix_lite-zbi-cmdline",
    ":starnix_lite_kernel_bin",
    "//build/info/bootfs:minimum_utc_stamp",
    "//examples/mistos_linux_bench:coremark",
    "//examples/mistos_linux_bench:libc-bench",
    "//examples/mistos_linux_bench:sqlite-bench-uk",
    "//src/starnix/containers/mistos:mistos_container_resources",
    "//src/starnix/containers/nolibc-test_container:linux-bin",
  ]

  output_name = "starnix_lite_kernel"
  output_dir = root_out_dir
  output_extension = "zbi"
  output_path =
      rebase_path("$output_dir/$target_name.$output_extension", root_build_dir)

  metadata = {
    # For the //:images build_api_module().
    images = [
      {
        label = get_label_info(":$target_name", "label_with_toolchain")
        name = "$target_name"
        tags = [ "incomplete" ]
        type = "zbi"
        path = output_path
        cpu = current_cpu
      },
    ]
  }
}

mistos_unittest_zbi("starnix_lite-tests") {
  executable_path = "bin/starnix_core_lib_test"
  test_target_label = "//src/starnix/kernel:starnix_core_test"
  deps = [
    "//src/starnix/examples/hello_starnix:bin",
    "//src/starnix/kernel:starnix-test-files",
  ]
}

mistos_unittest_zbi("starnix_lite_kernel_bin-tests") {
  executable_path = "bin/starnix_lite_kernel_bin_test"
  test_target_label = ":starnix_lite_kernel_bin_test"
}

mistos_unittest_zbi("starnix_lite_kernel_runner-tests") {
  executable_path = "bin/starnix_lite_kernel_runner_lib_test"
  test_target_label = ":starnix_lite_kernel_runner_test"
}
