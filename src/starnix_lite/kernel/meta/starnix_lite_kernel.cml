// Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    config: {
        // The features to run in the container.
        features: {
            type: "vector",
            element: {
                type: "string",
                max_size: 256,
            },
            max_count: 100,
        },

        // The arguments for the `init` task. The first argument must be an absolute path to the binary. Specify an empty vector to not start an init task.
        init: {
            type: "vector",
            element: {
                type: "string",
                max_size: 256,
            },
            max_count: 100,
        },

        // The command line arguments for the kernel.
        kernel_cmdline: {
            type: "string",
            max_size: 256,
        },

        //  The filesystems that get mounted when the container is created.
        mounts: {
            type: "vector",
            element: {
                type: "string",
                max_size: 256,
            },
            max_count: 100,
        },

        //  The resource limits for the container.
        rlimits: {
            type: "vector",
            element: {
                type: "string",
                max_size: 256,
            },
            max_count: 100,
        },

        // The name of the container.
        name: {
            type: "string",
            max_size: 256,
        },

        // A file path that will be used to determine whether or not the system is ready to execute
        // tasks. Prior to the existence of this file (if specified), the system will only run the
        // `init` task (and any tasks `init` spawns). The `init` task is expected to create a file
        // at this path.
        startup_file_path: {
            type: "string",
            max_size: 1024,
        },

        // The remote block devices which get created when the container is created.
        // The format is:
        //   ${blk_name}:${blk_size}
        // A RW block device is made available at /dev/remoteblk-${blk_name} in the Starnix
        // namespace.  Note that the block device is not persistent at this time.
        remote_block_devices: {
            type: "vector",
            element: {
                type: "string",
                max_size: 256,
            },
            max_count: 100,
        },
    },
}
