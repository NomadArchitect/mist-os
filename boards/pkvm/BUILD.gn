# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/assembly/board_configuration.gni")
import("//build/assembly/board_input_bundle.gni")

common_arguments = {
  provided_features = [
    "fuchsia::bus_pci",
    "fuchsia::driver_framework_v2_support",
    "fuchsia::paravirtualization",
    "fuchsia::pmm_checker_auto",
  ]

  input_bundles = [ ":main_bundle" ]
}

if (target_cpu == "x64") {
  board_configuration("x64") {
    name = "pkvm-x64"
    forward_variables_from(common_arguments, "*")

    hardware_info = {
      name = "default-board"
    }
    kernel = {
      serial_mode = "legacy"
    }
  }
} else if (target_cpu == "arm64") {
  board_configuration("arm64") {
    name = "pkvm-arm64"
    forward_variables_from(common_arguments, "*")

    hardware_info = {
      name = "qemu-arm64"
      product_id = 1
      vendor_id = 1
      revision = 1
    }
  }
}

board_input_bundle("main_bundle") {
  configuration = {
    power_manager =
        "//src/power/power-manager/node_config/base_node_config.json5"
  }

  drivers = [
    {
      package_target = "//src/devices/misc/drivers/virtio-socket:package"
      package_set = "bootfs"
      driver_components = [ "meta/virtio_socket.cm" ]
    },
  ]

  if (target_cpu == "x64") {
    drivers += [
      {
        package_target = "//src/devices/board/drivers/x86:package"
        package_set = "bootfs"
        driver_components = [ "meta/platform-bus-x86.cm" ]
      },
    ]
  } else if (target_cpu == "arm64") {
    drivers += [
      {
        # TODO: Update to pkvm specific board or board configuration
        package_target = "//src/devices/board/drivers/qemu-arm64:package"
        package_set = "bootfs"
        driver_components = [ "meta/qemu-arm64.cm" ]
      },
    ]
  } else {
    assert("Unsupported target_cpu ${target_cpu}.")
  }
}
