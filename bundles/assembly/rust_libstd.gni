# Copyright 2024 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
import("//build/rust/config.gni")

# Dig out rust libstd paths necessary for building an assembly compiled package.
#  which contains a dynamically linked rust binary. This is typically done by
# toolchain and then propagated via metadata, but assembly compiled packages
# cannot leverage that mechanism. The filenames for libstd change on every rust
# toolchain roll as well as per architecture so digging it out of runtime.json
# is necessary.
_rustc_runtime = read_file("$rustc_prefix/lib/runtime.json", "json")
rust_libstd_path = ""
rust_libstd_so_name = ""
foreach(config, _rustc_runtime) {
  if (config.target + [ "${current_target_tuple}" ] -
      [ "${current_target_tuple}" ] != config.target) {
    foreach(lib, config.runtime) {
      if (lib.name == "libstd") {
        rust_libstd_path =
            rebase_path(lib.dist, root_build_dir, "$rustc_prefix/lib")

        rust_libstd_so_name = lib.soname
      }
    }
  }
}
