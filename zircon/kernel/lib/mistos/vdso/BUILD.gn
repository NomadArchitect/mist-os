# Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//zircon/vdso/vdso.gni")

group("vdso") {
  deps = [ ":linux($fidl_toolchain)" ]
}

# See //zircon/tools/zither:tests, which covers the files generation from
# library zx.
group("tests") {
  testonly = true
  deps = []
}

fidl("linux") {
  visibility = [
    ":*",
    "//zircon/tools/zither:tests",
  ]

  # Order matters! It needs to match linux syscall numbers.
  # NOSORT
  sources = [
    "syscall.fidl",
    "syscall.test.fidl",
  ]

  if (exclude_testonly_syscalls) {
    sources -= [ "syscall.test.fidl" ]
  }

  # TODO(https://fxbug.dev/42061412): Burn these down.
  experimental_flags = [
    "zx_c_types",
    "allow_arbitrary_error_types",
  ]

  enable_zither = true
  enable_cpp = false
  enable_rust = false

  zither = {
  }
}

# TODO(joshuaseaton): Do not let our use of a "library zx" here propagate up to
# SDK build logic that would then consider this an "SDK library": there is
# already another library zx in the SDK and so this prevents collision.
barrier_metadata = {
  fidl_json_barrier = []
}

# This provides the public headers that go with the vDSO API, which are
# seen as <zircon/...>.
group("public") {
  visibility = [
    "//src/zircon/lib/zircon/*",
    "//zircon/kernel/lib/mistos/userabi/vdso/*",
  ]
  public_deps = [ ":linux_zither.legacy_syscall_cdecl" ]
  metadata = barrier_metadata
}

# This provides the private headers used by the kernel
group("private") {
  visibility = [
    "//zircon/kernel/lib/mistos/syscalls/*",
    "//zircon/kernel/lib/mistos/userabi/*",
    "//zircon/kernel/lib/syscalls/*",
  ]
  public_deps = [ ":linux_zither.mistos" ]
  metadata = barrier_metadata
}

config("syscalls.config") {
  include_dirs = [ "private" ]
}

group("syscalls.headers") {
  public_configs = [ ":syscalls.config" ]
}
