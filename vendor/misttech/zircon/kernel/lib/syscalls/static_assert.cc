// Copyright 2024 Mist Tecnologia LTDA. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// sed -E 's/#define ([A-Za-z0-9_]+) ([0-9]+)/static_assert(\1 == \2);/'
// out/default/fidling/gen/zircon/vdso/zx/zither/kernel/lib/syscalls/zx-syscall-numbers.h >
// zircon/kernel/lib/mistos/syscalls/static_assert.cc

#include <lib/syscalls/zx-syscall-numbers.h>

static_assert(ZX_SYS_a0000_read == 0);
static_assert(ZX_SYS_a0001_write == 1);
static_assert(ZX_SYS_a0002_open == 2);
static_assert(ZX_SYS_a0003_close == 3);
static_assert(ZX_SYS_a0004_stat == 4);
static_assert(ZX_SYS_a0005_fstat == 5);
static_assert(ZX_SYS_a0006_lstat == 6);
static_assert(ZX_SYS_a0007_poll == 7);
static_assert(ZX_SYS_a0008_lseek == 8);
static_assert(ZX_SYS_a0009_mmap == 9);
static_assert(ZX_SYS_a0010_mprotect == 10);
static_assert(ZX_SYS_a0011_munmap == 11);
static_assert(ZX_SYS_a0012_brk == 12);
static_assert(ZX_SYS_a0013_rt_sigaction == 13);
static_assert(ZX_SYS_a0014_rt_sigprocmask == 14);
static_assert(ZX_SYS_a0015_rt_sigreturn == 15);
static_assert(ZX_SYS_a0016_ioctl == 16);
static_assert(ZX_SYS_a0017_pread64 == 17);
static_assert(ZX_SYS_a0018_pwrite64 == 18);
static_assert(ZX_SYS_a0019_readv == 19);
static_assert(ZX_SYS_a0020_writev == 20);
static_assert(ZX_SYS_a0021_access == 21);
static_assert(ZX_SYS_a0022_pipe == 22);
static_assert(ZX_SYS_a0023_select == 23);
static_assert(ZX_SYS_a0024_sched_yield == 24);
static_assert(ZX_SYS_a0025_mremap == 25);
static_assert(ZX_SYS_a0026_msync == 26);
static_assert(ZX_SYS_a0027_mincore == 27);
static_assert(ZX_SYS_a0028_madvise == 28);
static_assert(ZX_SYS_a0029_shmget == 29);
static_assert(ZX_SYS_a0030_shmat == 30);
static_assert(ZX_SYS_a0031_shmctl == 31);
static_assert(ZX_SYS_a0032_dup == 32);
static_assert(ZX_SYS_a0033_dup2 == 33);
static_assert(ZX_SYS_a0034_pause == 34);
static_assert(ZX_SYS_a0035_nanosleep == 35);
static_assert(ZX_SYS_a0036_getitimer == 36);
static_assert(ZX_SYS_a0037_alarm == 37);
static_assert(ZX_SYS_a0038_setitimer == 38);
static_assert(ZX_SYS_a0039_getpid == 39);
static_assert(ZX_SYS_a0040_sendfile == 40);
static_assert(ZX_SYS_a0041_socket == 41);
static_assert(ZX_SYS_a0042_connect == 42);
static_assert(ZX_SYS_a0043_accept == 43);
static_assert(ZX_SYS_a0044_sendto == 44);
static_assert(ZX_SYS_a0045_recvfrom == 45);
static_assert(ZX_SYS_a0046_sendmsg == 46);
static_assert(ZX_SYS_a0047_recvmsg == 47);
static_assert(ZX_SYS_a0048_shutdown == 48);
static_assert(ZX_SYS_a0049_bind == 49);
static_assert(ZX_SYS_a0050_listen == 50);
static_assert(ZX_SYS_a0051_getsockname == 51);
static_assert(ZX_SYS_a0052_getpeername == 52);
static_assert(ZX_SYS_a0053_socketpair == 53);
static_assert(ZX_SYS_a0054_setsockopt == 54);
static_assert(ZX_SYS_a0055_getsockopt == 55);
static_assert(ZX_SYS_a0056_clone == 56);
static_assert(ZX_SYS_a0057_fork == 57);
static_assert(ZX_SYS_a0058_vfork == 58);
static_assert(ZX_SYS_a0059_execve == 59);
static_assert(ZX_SYS_a0060_exit == 60);
static_assert(ZX_SYS_a0061_wait4 == 61);
static_assert(ZX_SYS_a0062_kill == 62);
static_assert(ZX_SYS_a0063_uname == 63);
static_assert(ZX_SYS_a0064_semget == 64);
static_assert(ZX_SYS_a0065_semop == 65);
static_assert(ZX_SYS_a0066_semctl == 66);
static_assert(ZX_SYS_a0067_shmdt == 67);
static_assert(ZX_SYS_a0068_msgget == 68);
static_assert(ZX_SYS_a0069_msgsnd == 69);
static_assert(ZX_SYS_a0070_msgrcv == 70);
static_assert(ZX_SYS_a0071_msgctl == 71);
static_assert(ZX_SYS_a0072_fcntl == 72);
static_assert(ZX_SYS_a0073_flock == 73);
static_assert(ZX_SYS_a0074_fsync == 74);
static_assert(ZX_SYS_a0075_fdatasync == 75);
static_assert(ZX_SYS_a0076_truncate == 76);
static_assert(ZX_SYS_a0077_ftruncate == 77);
static_assert(ZX_SYS_a0078_getdents == 78);
static_assert(ZX_SYS_a0079_getcwd == 79);
static_assert(ZX_SYS_a0080_chdir == 80);
static_assert(ZX_SYS_a0081_fchdir == 81);
static_assert(ZX_SYS_a0082_rename == 82);
static_assert(ZX_SYS_a0083_mkdir == 83);
static_assert(ZX_SYS_a0084_rmdir == 84);
static_assert(ZX_SYS_a0085_creat == 85);
static_assert(ZX_SYS_a0086_link == 86);
static_assert(ZX_SYS_a0087_unlink == 87);
static_assert(ZX_SYS_a0088_symlink == 88);
static_assert(ZX_SYS_a0089_readlink == 89);
static_assert(ZX_SYS_a0090_chmod == 90);
static_assert(ZX_SYS_a0091_fchmod == 91);
static_assert(ZX_SYS_a0092_chown == 92);
static_assert(ZX_SYS_a0093_fchown == 93);
static_assert(ZX_SYS_a0094_lchown == 94);
static_assert(ZX_SYS_a0095_umask == 95);
static_assert(ZX_SYS_a0096_gettimeofday == 96);
static_assert(ZX_SYS_a0097_getrlimit == 97);
static_assert(ZX_SYS_a0098_getrusage == 98);
static_assert(ZX_SYS_a0099_sysinfo == 99);
static_assert(ZX_SYS_a0100_times == 100);
static_assert(ZX_SYS_a0101_ptrace == 101);
static_assert(ZX_SYS_a0102_getuid == 102);
static_assert(ZX_SYS_a0103_syslog == 103);
static_assert(ZX_SYS_a0104_getgid == 104);
static_assert(ZX_SYS_a0105_setuid == 105);
static_assert(ZX_SYS_a0106_setgid == 106);
static_assert(ZX_SYS_a0107_geteuid == 107);
static_assert(ZX_SYS_a0108_getegid == 108);
static_assert(ZX_SYS_a0109_setpgid == 109);
static_assert(ZX_SYS_a0110_getppid == 110);
static_assert(ZX_SYS_a0111_getpgrp == 111);
static_assert(ZX_SYS_a0112_setsid == 112);
static_assert(ZX_SYS_a0113_setreuid == 113);
static_assert(ZX_SYS_a0114_setregid == 114);
static_assert(ZX_SYS_a0115_getgroups == 115);
static_assert(ZX_SYS_a0116_setgroups == 116);
static_assert(ZX_SYS_a0117_setresuid == 117);
static_assert(ZX_SYS_a0118_getresuid == 118);
static_assert(ZX_SYS_a0119_setresgid == 119);
static_assert(ZX_SYS_a0120_getresgid == 120);
static_assert(ZX_SYS_a0121_getpgid == 121);
static_assert(ZX_SYS_a0122_setfsuid == 122);
static_assert(ZX_SYS_a0123_setfsgid == 123);
static_assert(ZX_SYS_a0124_getsid == 124);
static_assert(ZX_SYS_a0125_capget == 125);
static_assert(ZX_SYS_a0126_capset == 126);
static_assert(ZX_SYS_a0127_rt_sigpending == 127);
static_assert(ZX_SYS_a0128_rt_sigtimedwait == 128);
static_assert(ZX_SYS_a0129_rt_sigqueueinfo == 129);
static_assert(ZX_SYS_a0130_rt_sigsuspend == 130);
static_assert(ZX_SYS_a0131_sigaltstack == 131);
static_assert(ZX_SYS_a0132_utime == 132);
static_assert(ZX_SYS_a0133_mknod == 133);
static_assert(ZX_SYS_a0134_uselib == 134);
static_assert(ZX_SYS_a0135_personality == 135);
static_assert(ZX_SYS_a0136_ustat == 136);
static_assert(ZX_SYS_a0137_statfs == 137);
static_assert(ZX_SYS_a0138_fstatfs == 138);
static_assert(ZX_SYS_a0139_sysfs == 139);
static_assert(ZX_SYS_a0140_getpriority == 140);
static_assert(ZX_SYS_a0141_setpriority == 141);
static_assert(ZX_SYS_a0142_sched_setparam == 142);
static_assert(ZX_SYS_a0143_sched_getparam == 143);
static_assert(ZX_SYS_a0144_sched_setscheduler == 144);
static_assert(ZX_SYS_a0145_sched_getscheduler == 145);
static_assert(ZX_SYS_a0146_sched_get_priority_max == 146);
static_assert(ZX_SYS_a0147_sched_get_priority_min == 147);
static_assert(ZX_SYS_a0148_sched_rr_get_interval == 148);
static_assert(ZX_SYS_a0149_mlock == 149);
static_assert(ZX_SYS_a0150_munlock == 150);
static_assert(ZX_SYS_a0151_mlockall == 151);
static_assert(ZX_SYS_a0152_munlockall == 152);
static_assert(ZX_SYS_a0153_vhangup == 153);
static_assert(ZX_SYS_a0154_modify_ldt == 154);
static_assert(ZX_SYS_a0155_pivot_root == 155);
static_assert(ZX_SYS_a0156_not_impl == 156);
static_assert(ZX_SYS_a0157_prctl == 157);
static_assert(ZX_SYS_a0158_arch_prctl == 158);
static_assert(ZX_SYS_a0159_adjtimex == 159);
static_assert(ZX_SYS_a0160_setrlimit == 160);
static_assert(ZX_SYS_a0161_chroot == 161);
static_assert(ZX_SYS_a0162_sync == 162);
static_assert(ZX_SYS_a0163_acct == 163);
static_assert(ZX_SYS_a0164_settimeofday == 164);
static_assert(ZX_SYS_a0165_mount == 165);
static_assert(ZX_SYS_a0166_umount2 == 166);
static_assert(ZX_SYS_a0167_swapon == 167);
static_assert(ZX_SYS_a0168_swapoff == 168);
static_assert(ZX_SYS_a0169_reboot == 169);
static_assert(ZX_SYS_a0170_sethostname == 170);
static_assert(ZX_SYS_a0171_setdomainname == 171);
static_assert(ZX_SYS_a0172_iopl == 172);
static_assert(ZX_SYS_a0173_ioperm == 173);
static_assert(ZX_SYS_a0174_create_module == 174);
static_assert(ZX_SYS_a0175_init_module == 175);
static_assert(ZX_SYS_a0176_delete_module == 176);
static_assert(ZX_SYS_a0177_get_kernel_syms == 177);
static_assert(ZX_SYS_a0178_query_module == 178);
static_assert(ZX_SYS_a0179_quotactl == 179);
static_assert(ZX_SYS_a0180_nfsservctl == 180);
static_assert(ZX_SYS_a0181_getpmsg == 181);
static_assert(ZX_SYS_a0182_putpmsg == 182);
static_assert(ZX_SYS_a0183_afs_syscall == 183);
static_assert(ZX_SYS_a0184_tuxcall == 184);
static_assert(ZX_SYS_a0185_security == 185);
static_assert(ZX_SYS_a0186_gettid == 186);
static_assert(ZX_SYS_a0187_readahead == 187);
static_assert(ZX_SYS_a0188_setxattr == 188);
static_assert(ZX_SYS_a0189_lsetxattr == 189);
static_assert(ZX_SYS_a0190_fsetxattr == 190);
static_assert(ZX_SYS_a0191_getxattr == 191);
static_assert(ZX_SYS_a0192_lgetxattr == 192);
static_assert(ZX_SYS_a0193_fgetxattr == 193);
static_assert(ZX_SYS_a0194_listxattr == 194);
static_assert(ZX_SYS_a0195_llistxattr == 195);
static_assert(ZX_SYS_a0196_flistxattr == 196);
static_assert(ZX_SYS_a0197_removexattr == 197);
static_assert(ZX_SYS_a0198_lremovexattr == 198);
static_assert(ZX_SYS_a0199_fremovexattr == 199);
static_assert(ZX_SYS_a0200_tkill == 200);
static_assert(ZX_SYS_a0201_time == 201);
static_assert(ZX_SYS_a0202_futex == 202);
static_assert(ZX_SYS_a0203_sched_setaffinity == 203);
static_assert(ZX_SYS_a0204_sched_getaffinity == 204);
static_assert(ZX_SYS_a0205_set_thread_area == 205);
static_assert(ZX_SYS_a0206_io_setup == 206);
static_assert(ZX_SYS_a0207_io_destroy == 207);
static_assert(ZX_SYS_a0208_io_getevents == 208);
static_assert(ZX_SYS_a0209_io_submit == 209);
static_assert(ZX_SYS_a0210_io_cancel == 210);
static_assert(ZX_SYS_a0211_get_thread_area == 211);
static_assert(ZX_SYS_a0212_lookup_dcookie == 212);
static_assert(ZX_SYS_a0213_epoll_create == 213);
static_assert(ZX_SYS_a0214_epoll_ctl_old == 214);
static_assert(ZX_SYS_a0215_epoll_wait_old == 215);
static_assert(ZX_SYS_a0216_remap_file_pages == 216);
static_assert(ZX_SYS_a0217_getdents64 == 217);
static_assert(ZX_SYS_a0218_set_tid_address == 218);
static_assert(ZX_SYS_a0219_restart_syscall == 219);
static_assert(ZX_SYS_a0220_semtimedop == 220);
static_assert(ZX_SYS_a0221_fadvise64 == 221);
static_assert(ZX_SYS_a0222_timer_create == 222);
static_assert(ZX_SYS_a0223_timer_settime == 223);
static_assert(ZX_SYS_a0224_timer_gettime == 224);
static_assert(ZX_SYS_a0225_timer_getoverrun == 225);
static_assert(ZX_SYS_a0226_timer_delete == 226);
static_assert(ZX_SYS_a0227_clock_settime == 227);
static_assert(ZX_SYS_a0228_clock_gettime == 228);
static_assert(ZX_SYS_a0229_clock_getres == 229);
static_assert(ZX_SYS_a0230_clock_nanosleep == 230);
static_assert(ZX_SYS_a0231_exit_group == 231);
static_assert(ZX_SYS_a0232_epoll_wait == 232);
static_assert(ZX_SYS_a0233_epoll_ctl == 233);
static_assert(ZX_SYS_a0234_tgkill == 234);
static_assert(ZX_SYS_a0235_utimes == 235);
static_assert(ZX_SYS_a0236_vserver == 236);
static_assert(ZX_SYS_a0237_mbind == 237);
static_assert(ZX_SYS_a0238_set_mempolicy == 238);
static_assert(ZX_SYS_a0239_get_mempolicy == 239);
static_assert(ZX_SYS_a0240_mq_open == 240);
static_assert(ZX_SYS_a0241_mq_unlink == 241);
static_assert(ZX_SYS_a0242_mq_timedsend == 242);
static_assert(ZX_SYS_a0243_mq_timedreceive == 243);
static_assert(ZX_SYS_a0244_mq_notify == 244);
static_assert(ZX_SYS_a0245_mq_getsetattr == 245);
static_assert(ZX_SYS_a0246_kexec_load == 246);
static_assert(ZX_SYS_a0247_waitid == 247);
static_assert(ZX_SYS_a0248_add_key == 248);
static_assert(ZX_SYS_a0249_request_key == 249);
static_assert(ZX_SYS_a0250_keyctl == 250);
static_assert(ZX_SYS_a0251_ioprio_set == 251);
static_assert(ZX_SYS_a0252_ioprio_get == 252);
static_assert(ZX_SYS_a0253_inotify_init == 253);
static_assert(ZX_SYS_a0254_inotify_add_watch == 254);
static_assert(ZX_SYS_a0255_inotify_rm_watch == 255);
static_assert(ZX_SYS_a0256_migrate_pages == 256);
static_assert(ZX_SYS_a0257_openat == 257);
static_assert(ZX_SYS_a0258_mkdirat == 258);
static_assert(ZX_SYS_a0259_mknodat == 259);
static_assert(ZX_SYS_a0260_fchownat == 260);
static_assert(ZX_SYS_a0261_futimesat == 261);
static_assert(ZX_SYS_a0262_newfstatat == 262);
static_assert(ZX_SYS_a0263_unlinkat == 263);
static_assert(ZX_SYS_a0264_renameat == 264);
static_assert(ZX_SYS_a0265_linkat == 265);
static_assert(ZX_SYS_a0266_symlinkat == 266);
static_assert(ZX_SYS_a0267_readlinkat == 267);
static_assert(ZX_SYS_a0268_fchmodat == 268);
static_assert(ZX_SYS_a0269_faccessat == 269);
static_assert(ZX_SYS_a0270_pselect6 == 270);
static_assert(ZX_SYS_a0271_ppoll == 271);
static_assert(ZX_SYS_a0272_unshare == 272);
static_assert(ZX_SYS_a0273_set_robust_list == 273);
static_assert(ZX_SYS_a0274_get_robust_list == 274);
static_assert(ZX_SYS_a0275_splice == 275);
static_assert(ZX_SYS_a0276_tee == 276);
static_assert(ZX_SYS_a0277_sync_file_range == 277);
static_assert(ZX_SYS_a0278_vmsplice == 278);
static_assert(ZX_SYS_a0279_move_pages == 279);
static_assert(ZX_SYS_a0280_utimensat == 280);
static_assert(ZX_SYS_a0281_epoll_pwait == 281);
static_assert(ZX_SYS_a0282_signalfd == 282);
static_assert(ZX_SYS_a0283_timerfd_create == 283);
static_assert(ZX_SYS_a0284_eventfd == 284);
static_assert(ZX_SYS_a0285_fallocate == 285);
static_assert(ZX_SYS_a0286_timerfd_settime == 286);
static_assert(ZX_SYS_a0287_timerfd_gettime == 287);
static_assert(ZX_SYS_a0288_accept4 == 288);
static_assert(ZX_SYS_a0289_signalfd4 == 289);
static_assert(ZX_SYS_a0290_eventfd2 == 290);
static_assert(ZX_SYS_a0291_epoll_create1 == 291);
static_assert(ZX_SYS_a0292_dup3 == 292);
static_assert(ZX_SYS_a0293_pipe2 == 293);
static_assert(ZX_SYS_a0294_inotify_init1 == 294);
static_assert(ZX_SYS_a0295_preadv == 295);
static_assert(ZX_SYS_a0296_pwritev == 296);
static_assert(ZX_SYS_a0297_rt_tgsigqueueinfo == 297);
static_assert(ZX_SYS_a0298_perf_event_open == 298);
static_assert(ZX_SYS_a0299_recvmmsg == 299);
static_assert(ZX_SYS_a0300_fanotify_init == 300);
static_assert(ZX_SYS_a0301_fanotify_mark == 301);
static_assert(ZX_SYS_a0302_prlimit64 == 302);
static_assert(ZX_SYS_a0303_name_to_handle_at == 303);
static_assert(ZX_SYS_a0304_open_by_handle_at == 304);
static_assert(ZX_SYS_a0305_clock_adjtime == 305);
static_assert(ZX_SYS_a0306_syncfs == 306);
static_assert(ZX_SYS_a0307_sendmmsg == 307);
static_assert(ZX_SYS_a0308_setns == 308);
static_assert(ZX_SYS_a0309_getcpu == 309);
static_assert(ZX_SYS_a0310_process_vm_readv == 310);
static_assert(ZX_SYS_a0311_process_vm_writev == 311);
static_assert(ZX_SYS_a0312_kcmp == 312);
static_assert(ZX_SYS_a0313_finit_module == 313);
static_assert(ZX_SYS_a0314_sched_setattr == 314);
static_assert(ZX_SYS_a0315_sched_getattr == 315);
static_assert(ZX_SYS_a0316_renameat2 == 316);
static_assert(ZX_SYS_a0317_seccomp == 317);
static_assert(ZX_SYS_a0318_getrandom == 318);
static_assert(ZX_SYS_a0319_memfd_create == 319);
static_assert(ZX_SYS_a0320_kexec_file_load == 320);
static_assert(ZX_SYS_a0321_bpf == 321);
static_assert(ZX_SYS_a0322_execveat == 322);
static_assert(ZX_SYS_a0323_userfaultfd == 323);
static_assert(ZX_SYS_a0324_membarrier == 324);
static_assert(ZX_SYS_a0325_mlock2 == 325);
static_assert(ZX_SYS_a0326_copy_file_range == 326);
static_assert(ZX_SYS_a0327_preadv2 == 327);
static_assert(ZX_SYS_a0328_pwritev2 == 328);
static_assert(ZX_SYS_a0329_pkey_mprotect == 329);
static_assert(ZX_SYS_a0330_pkey_alloc == 330);
static_assert(ZX_SYS_a0331_pkey_free == 331);
static_assert(ZX_SYS_a0332_statx == 332);
static_assert(ZX_SYS_a0333_io_pgetevents == 333);
static_assert(ZX_SYS_a0334_rseq == 334);
static_assert(ZX_SYS_a0335_blank == 335);
static_assert(ZX_SYS_a0336_blank == 336);
static_assert(ZX_SYS_a0337_blank == 337);
static_assert(ZX_SYS_a0338_blank == 338);
static_assert(ZX_SYS_a0339_blank == 339);
static_assert(ZX_SYS_a0340_blank == 340);
static_assert(ZX_SYS_a0341_blank == 341);
static_assert(ZX_SYS_a0342_blank == 342);
static_assert(ZX_SYS_a0343_blank == 343);
static_assert(ZX_SYS_a0344_blank == 344);
static_assert(ZX_SYS_a0345_blank == 345);
static_assert(ZX_SYS_a0346_blank == 346);
static_assert(ZX_SYS_a0347_blank == 347);
static_assert(ZX_SYS_a0348_blank == 348);
static_assert(ZX_SYS_a0349_blank == 349);
static_assert(ZX_SYS_a0350_blank == 350);
static_assert(ZX_SYS_a0351_blank == 351);
static_assert(ZX_SYS_a0352_blank == 352);
static_assert(ZX_SYS_a0353_blank == 353);
static_assert(ZX_SYS_a0354_blank == 354);
static_assert(ZX_SYS_a0355_blank == 355);
static_assert(ZX_SYS_a0356_blank == 356);
static_assert(ZX_SYS_a0357_blank == 357);
static_assert(ZX_SYS_a0358_blank == 358);
static_assert(ZX_SYS_a0359_blank == 359);
static_assert(ZX_SYS_a0360_blank == 360);
static_assert(ZX_SYS_a0361_blank == 361);
static_assert(ZX_SYS_a0362_blank == 362);
static_assert(ZX_SYS_a0363_blank == 363);
static_assert(ZX_SYS_a0364_blank == 364);
static_assert(ZX_SYS_a0365_blank == 365);
static_assert(ZX_SYS_a0366_blank == 366);
static_assert(ZX_SYS_a0367_blank == 367);
static_assert(ZX_SYS_a0368_blank == 368);
static_assert(ZX_SYS_a0369_blank == 369);
static_assert(ZX_SYS_a0370_blank == 370);
static_assert(ZX_SYS_a0371_blank == 371);
static_assert(ZX_SYS_a0372_blank == 372);
static_assert(ZX_SYS_a0373_blank == 373);
static_assert(ZX_SYS_a0374_blank == 374);
static_assert(ZX_SYS_a0375_blank == 375);
static_assert(ZX_SYS_a0376_blank == 376);
static_assert(ZX_SYS_a0377_blank == 377);
static_assert(ZX_SYS_a0378_blank == 378);
static_assert(ZX_SYS_a0379_blank == 379);
static_assert(ZX_SYS_a0380_blank == 380);
static_assert(ZX_SYS_a0381_blank == 381);
static_assert(ZX_SYS_a0382_blank == 382);
static_assert(ZX_SYS_a0383_blank == 383);
static_assert(ZX_SYS_a0384_blank == 384);
static_assert(ZX_SYS_a0385_blank == 385);
static_assert(ZX_SYS_a0386_blank == 386);
static_assert(ZX_SYS_a0387_dont_use == 387);
static_assert(ZX_SYS_a0388_dont_use == 388);
static_assert(ZX_SYS_a0389_dont_use == 389);
static_assert(ZX_SYS_a0390_dont_use == 390);
static_assert(ZX_SYS_a0391_dont_use == 391);
static_assert(ZX_SYS_a0392_dont_use == 392);
static_assert(ZX_SYS_a0393_dont_use == 393);
static_assert(ZX_SYS_a0394_dont_use == 394);
static_assert(ZX_SYS_a0395_dont_use == 395);
static_assert(ZX_SYS_a0396_dont_use == 396);
static_assert(ZX_SYS_a0397_dont_use == 397);
static_assert(ZX_SYS_a0398_dont_use == 398);
static_assert(ZX_SYS_a0399_dont_use == 399);
static_assert(ZX_SYS_a0400_dont_use == 400);
static_assert(ZX_SYS_a0401_dont_use == 401);
static_assert(ZX_SYS_a0402_dont_use == 402);
static_assert(ZX_SYS_a0403_dont_use == 403);
static_assert(ZX_SYS_a0404_dont_use == 404);
static_assert(ZX_SYS_a0405_dont_use == 405);
static_assert(ZX_SYS_a0406_dont_use == 406);
static_assert(ZX_SYS_a0407_dont_use == 407);
static_assert(ZX_SYS_a0408_dont_use == 408);
static_assert(ZX_SYS_a0409_dont_use == 409);
static_assert(ZX_SYS_a0410_dont_use == 410);
static_assert(ZX_SYS_a0411_dont_use == 411);
static_assert(ZX_SYS_a0412_dont_use == 412);
static_assert(ZX_SYS_a0413_dont_use == 413);
static_assert(ZX_SYS_a0414_dont_use == 414);
static_assert(ZX_SYS_a0415_dont_use == 415);
static_assert(ZX_SYS_a0416_dont_use == 416);
static_assert(ZX_SYS_a0417_dont_use == 417);
static_assert(ZX_SYS_a0418_dont_use == 418);
static_assert(ZX_SYS_a0419_dont_use == 419);
static_assert(ZX_SYS_a0420_dont_use == 420);
static_assert(ZX_SYS_a0421_dont_use == 421);
static_assert(ZX_SYS_a0422_dont_use == 422);
static_assert(ZX_SYS_a0423_dont_use == 423);
static_assert(ZX_SYS_a0424_pidfd_send_signal == 424);
static_assert(ZX_SYS_a0425_io_uring_setup == 425);
static_assert(ZX_SYS_a0426_io_uring_enter == 426);
static_assert(ZX_SYS_a0427_io_uring_register == 427);
static_assert(ZX_SYS_a0428_open_tree == 428);
static_assert(ZX_SYS_a0429_move_mount == 429);
static_assert(ZX_SYS_a0430_fsopen == 430);
static_assert(ZX_SYS_a0431_fsconfig == 431);
static_assert(ZX_SYS_a0432_fsmount == 432);
static_assert(ZX_SYS_a0433_fspick == 433);
static_assert(ZX_SYS_a0434_pidfd_open == 434);
static_assert(ZX_SYS_a0435_clone3 == 435);
static_assert(ZX_SYS_a0436_close_range == 436);
static_assert(ZX_SYS_a0437_openat2 == 437);
static_assert(ZX_SYS_a0438_pidfd_getfd == 438);
static_assert(ZX_SYS_a0439_faccessat2 == 439);
static_assert(ZX_SYS_a0440_process_madvise == 440);
static_assert(ZX_SYS_a0441_epoll_pwait2 == 441);
static_assert(ZX_SYS_a0442_mount_setattr == 442);
static_assert(ZX_SYS_a0443_quotactl_fd == 443);
static_assert(ZX_SYS_a0444_landlock_create_ruleset == 444);
static_assert(ZX_SYS_a0445_landlock_add_rule == 445);
static_assert(ZX_SYS_a0446_landlock_restrict_self == 446);
static_assert(ZX_SYS_a0447_memfd_secret == 447);
static_assert(ZX_SYS_a0448_process_mrelease == 448);
static_assert(ZX_SYS_a0449_futex_waitv == 449);
static_assert(ZX_SYS_a0450_set_mempolicy_home_node == 450);
static_assert(ZX_SYS_a0451_cachestat == 451);
static_assert(ZX_SYS_a0452_fchmodat2 == 452);
static_assert(ZX_SYS_a0453_map_shadow_stack == 453);
static_assert(ZX_SYS_a0454_blank == 454);
static_assert(ZX_SYS_a0455_blank == 455);
static_assert(ZX_SYS_a0456_blank == 456);
static_assert(ZX_SYS_a0457_blank == 457);
static_assert(ZX_SYS_a0458_blank == 458);
static_assert(ZX_SYS_a0459_blank == 459);
static_assert(ZX_SYS_a0460_blank == 460);
static_assert(ZX_SYS_a0461_blank == 461);
static_assert(ZX_SYS_a0462_blank == 462);
static_assert(ZX_SYS_a0463_blank == 463);
static_assert(ZX_SYS_a0464_blank == 464);
static_assert(ZX_SYS_a0465_blank == 465);
static_assert(ZX_SYS_a0466_blank == 466);
static_assert(ZX_SYS_a0467_blank == 467);
static_assert(ZX_SYS_a0468_blank == 468);
static_assert(ZX_SYS_a0469_blank == 469);
static_assert(ZX_SYS_a0470_blank == 470);
static_assert(ZX_SYS_a0471_blank == 471);
static_assert(ZX_SYS_a0472_blank == 472);
static_assert(ZX_SYS_a0473_blank == 473);
static_assert(ZX_SYS_a0474_blank == 474);
static_assert(ZX_SYS_a0475_blank == 475);
static_assert(ZX_SYS_a0476_blank == 476);
static_assert(ZX_SYS_a0477_blank == 477);
static_assert(ZX_SYS_a0478_blank == 478);
static_assert(ZX_SYS_a0479_blank == 479);
static_assert(ZX_SYS_a0480_blank == 480);
static_assert(ZX_SYS_a0481_blank == 481);
static_assert(ZX_SYS_a0482_blank == 482);
static_assert(ZX_SYS_a0483_blank == 483);
static_assert(ZX_SYS_a0484_blank == 484);
static_assert(ZX_SYS_a0485_blank == 485);
static_assert(ZX_SYS_a0486_blank == 486);
static_assert(ZX_SYS_a0487_blank == 487);
static_assert(ZX_SYS_a0488_blank == 488);
static_assert(ZX_SYS_a0489_blank == 489);
static_assert(ZX_SYS_a0490_blank == 490);
static_assert(ZX_SYS_a0491_blank == 491);
static_assert(ZX_SYS_a0492_blank == 492);
static_assert(ZX_SYS_a0493_blank == 493);
static_assert(ZX_SYS_a0494_blank == 494);
static_assert(ZX_SYS_a0495_blank == 495);
static_assert(ZX_SYS_a0496_blank == 496);
static_assert(ZX_SYS_a0497_blank == 497);
static_assert(ZX_SYS_a0498_blank == 498);
static_assert(ZX_SYS_a0499_blank == 499);
static_assert(ZX_SYS_a0500_blank == 500);
static_assert(ZX_SYS_a0501_blank == 501);
static_assert(ZX_SYS_a0502_blank == 502);
static_assert(ZX_SYS_a0503_blank == 503);
static_assert(ZX_SYS_a0504_blank == 504);
static_assert(ZX_SYS_a0505_blank == 505);
static_assert(ZX_SYS_a0506_blank == 506);
static_assert(ZX_SYS_a0507_blank == 507);
static_assert(ZX_SYS_a0508_blank == 508);
static_assert(ZX_SYS_a0509_blank == 509);
static_assert(ZX_SYS_a0510_blank == 510);
static_assert(ZX_SYS_a0511_blank == 511);
static_assert(ZX_SYS_a0512_compat_rt_sigaction == 512);
static_assert(ZX_SYS_a0513_compat_rt_sigreturn == 513);
static_assert(ZX_SYS_a0514_compat_ioctl == 514);
static_assert(ZX_SYS_a0515_compat_readv == 515);
static_assert(ZX_SYS_a0516_compat_writev == 516);
static_assert(ZX_SYS_a0517_compat_recvfrom == 517);
static_assert(ZX_SYS_a0518_compat_sendmsg == 518);
static_assert(ZX_SYS_a0519_compat_recvmsg == 519);
static_assert(ZX_SYS_a0520_compat_execve == 520);
static_assert(ZX_SYS_a0521_compat_ptrace == 521);
static_assert(ZX_SYS_a0522_compat_rt_sigpending == 522);
static_assert(ZX_SYS_a0523_compat_rt_sigtimedwait == 523);
static_assert(ZX_SYS_a0524_compat_rt_sigqueueinfo == 524);
static_assert(ZX_SYS_a0525_compat_sigaltstack == 525);
static_assert(ZX_SYS_a0526_compat_timer_create == 526);
static_assert(ZX_SYS_a0527_compat_mq_notify == 527);
static_assert(ZX_SYS_a0528_compat_kexec_load == 528);
static_assert(ZX_SYS_a0529_compat_waitid == 529);
static_assert(ZX_SYS_a0530_compat_set_robust_list == 530);
static_assert(ZX_SYS_a0531_compat_get_robust_list == 531);
static_assert(ZX_SYS_a0532_compat_vmsplice == 532);
static_assert(ZX_SYS_a0533_compat_move_pages == 533);
static_assert(ZX_SYS_a0534_compat_preadv == 534);
static_assert(ZX_SYS_a0535_compat_pwritev == 535);
static_assert(ZX_SYS_a0536_compat_rt_tgsigqueueinfo == 536);
static_assert(ZX_SYS_a0537_compat_recvmmsg == 537);
static_assert(ZX_SYS_a0538_compat_sendmmsg == 538);
static_assert(ZX_SYS_a0539_compat_process_vm_readv == 539);
static_assert(ZX_SYS_a0540_compat_process_vm_writev == 540);
static_assert(ZX_SYS_a0541_compat_setsockopt == 541);
static_assert(ZX_SYS_a0542_compat_getsockopt == 542);
static_assert(ZX_SYS_a0543_compat_io_setup == 543);
static_assert(ZX_SYS_a0544_compat_io_submit == 544);
static_assert(ZX_SYS_a0545_compat_execveat == 545);
static_assert(ZX_SYS_a0546_compat_preadv2 == 546);
static_assert(ZX_SYS_a0547_compat_pwritev2 == 547);
