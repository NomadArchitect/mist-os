// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.driver.token;

using fuchsia.driver.framework;
using zx;

const MAX_SEGMENTS uint32 = 20;

/// Provides the bus topology for the given node.
@discoverable
open protocol NodeBusTopology {
    strict Get(resource struct {
        token zx.Handle:EVENT;
    }) -> (struct {
        /// A series of bus fragments descibing the bus topology for this node.
        /// An example:
        ///   path[0] = { type: ACPI, address: I2C0, stability: Stable }
        ///   path[1] = { type: I2C, address: 0x1, stability: Stable }
        path vector<fuchsia.driver.framework.BusInfo>:MAX_SEGMENTS;
    }) error zx.Status;
};
