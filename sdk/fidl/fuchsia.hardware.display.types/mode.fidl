// Copyright 2024 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.hardware.display.types;

using fuchsia.math;

/// Attributes for a [`Mode`].
///
/// This type allows for the future expansion of `Mode` with binary attributes,
/// such as whether a display mode is interlaced.
type ModeFlags = flexible bits : uint32 {};

/// Describes an operational mode for a display device attached to the system.
///
/// The operational parameters that make up a mode description must be updated
/// atomically, using a resource-intensive "mode setting" operation. Parameters
/// that can be changed quickly, such as brightness and contrast, do not belong
/// in a mode description.
type Mode = struct {
    /// The dimensions of the displayed image, in pixels.
    ///
    /// This describes the image data sent to the display, which is also called
    /// the "active area" or "active pixels" in raster scan terminology. Despite
    /// the name, some of the "active pixels" may not actually be shown to the
    /// user, for example due to corners or notches.
    ///
    /// Valid modes have non-empty active areas.
    active_area fuchsia.math.SizeU;

    /// Number of images transmitted to the display in 1,000 seconds.
    ///
    /// This quantity is also known as the display's frame rate, or the
    /// display's vertical refresh rate. The rate is measured in millihertz
    /// (mHz).
    ///
    /// Valid modes have positive refresh rates.
    refresh_rate_millihertz uint32;

    flags ModeFlags;
};

/// Type of the internal value in [`fuchsia.hardware.display.types/ModeId`].
alias ModeIdValue = uint16;

/// Identifies a supported operational mode for a display.
///
/// Values are unique relatively to a [`DisplayId`] value, which is unique
/// within a [`fuchsia.hardware.display.engine/Engine`] connection.
///
/// [`fuchsia.hardware.display.types/INVALID_MODE_ID`] represents an invalid
/// value.
type ModeId = struct {
    value ModeIdValue;
};

/// Invalid id for display modes.
const INVALID_MODE_ID ModeIdValue = 0;
