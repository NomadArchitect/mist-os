// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
library fuchsia.sysmem;

/// Describes how a client will access the contents of a buffer.
///
/// This type is deprecated for new code, but is still used by some camera code.
type BufferUsage = struct {
    none uint32;
    cpu uint32;
    vulkan uint32;
    display uint32;
    video uint32;
};

// Flag for "none" usage.
//
// This bit indicates that there is no direct usage from the participant, and
// that the participant hasn't forgotten to set usage.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.NONE_USAGE")
const noneUsage uint32 = 1;

// Flags for "cpu" usage.
// The "often" variants prefer cacheable memory.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.CPU_USAGE_READ")
const cpuUsageRead uint32 = 1;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.CPU_USAGE_READ_OFTEN")
const cpuUsageReadOften uint32 = 2;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.CPU_USAGE_WRITE")
const cpuUsageWrite uint32 = 4;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.CPU_USAGE_WRITE_OFTEN")
const cpuUsageWriteOften uint32 = 8;

// Flags for "vulkan" usage.

// Vulkan image usage flags.
// Based on https://www.khronos.org/registry/vulkan/specs/1.1-extensions/man/html/VkImageUsageFlagBits.html
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSFER_SRC")
const VULKAN_IMAGE_USAGE_TRANSFER_SRC uint32 = 0X0001;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSFER_DST")
const VULKAN_IMAGE_USAGE_TRANSFER_DST uint32 = 0X0002;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_SAMPLED")
const VULKAN_IMAGE_USAGE_SAMPLED uint32 = 0X0004;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_STORAGE")
const VULKAN_IMAGE_USAGE_STORAGE uint32 = 0X0008;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_COLOR_ATTACHMENT")
const VULKAN_IMAGE_USAGE_COLOR_ATTACHMENT uint32 = 0X0010;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_STENCIL_ATTACHMENT")
const VULKAN_IMAGE_USAGE_STENCIL_ATTACHMENT uint32 = 0X0020;
@available(
        added=7,
        deprecated=23,
        note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSIENT_ATTACHMENT")
const VULKAN_IMAGE_USAGE_TRANSIENT_ATTACHMENT uint32 = 0X0040;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_INPUT_ATTACHMENT")
const VULKAN_IMAGE_USAGE_INPUT_ATTACHMENT uint32 = 0X0080;

// Deprecated. Use |fuchsia.sysmem2.VULKAN_IMAGE_USAGE_*| instead.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSFER_SRC")
const vulkanUsageTransferSrc uint32 = 0x0001;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSFER_DST")
const vulkanUsageTransferDst uint32 = 0x0002;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_SAMPLED")
const vulkanUsageSampled uint32 = 0x0004;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_STORAGE")
const vulkanUsageStorage uint32 = 0x0008;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_COLOR_ATTACHMENT")
const vulkanUsageColorAttachment uint32 = 0x0010;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_STENCIL_ATTACHMENT")
const vulkanUsageStencilAttachment uint32 = 0x0020;
@available(
        added=7,
        deprecated=23,
        note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_TRANSIENT_ATTACHMENT")
const vulkanUsageTransientAttachment uint32 = 0x0040;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_IMAGE_USAGE_INPUT_ATTACHMENT")
const vulkanUsageInputAttachment uint32 = 0x0080;

// Vulkan buffer usage flags.
// Based on https://www.khronos.org/registry/vulkan/specs/1.2-extensions/man/html/VkBufferUsageFlagBits.html
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_TRANSFER_SRC")
const VULKAN_BUFFER_USAGE_TRANSFER_SRC uint32 = 0X00010000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_TRANSFER_DST")
const VULKAN_BUFFER_USAGE_TRANSFER_DST uint32 = 0X00020000;
@available(
        added=7,
        deprecated=23,
        note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER")
const VULKAN_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER uint32 = 0X00040000;
@available(
        added=7,
        deprecated=23,
        note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_STORAGE_TEXEL_BUFFER")
const VULKAN_BUFFER_USAGE_STORAGE_TEXEL_BUFFER uint32 = 0X00080000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_UNIFORM_BUFFER")
const VULKAN_BUFFER_USAGE_UNIFORM_BUFFER uint32 = 0X00100000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_STORAGE_BUFFER")
const VULKAN_BUFFER_USAGE_STORAGE_BUFFER uint32 = 0X00200000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_INDEX_BUFFER")
const VULKAN_BUFFER_USAGE_INDEX_BUFFER uint32 = 0X00400000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_VERTEX_BUFFER")
const VULKAN_BUFFER_USAGE_VERTEX_BUFFER uint32 = 0X00800000;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VULKAN_BUFFER_USAGE_INDIRECT_BUFFER")
const VULKAN_BUFFER_USAGE_INDIRECT_BUFFER uint32 = 0X01000000;

// Flags for "display" usage.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.DISPLAY_USAGE_LAYER")
const displayUsageLayer uint32 = 1;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.DISPLAY_USAGE_CURSOR")
const displayUsageCursor uint32 = 2;

// Flags for "video" usage.
// TODO(https://fxbug.dev/42107168): Add more specific HwDecoder flags if needed.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VIDEO_USAGE_HW_DECODER")
const videoUsageHwDecoder uint32 = 1;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VIDEO_USAGE_HW_ENCODER")
const videoUsageHwEncoder uint32 = 2;
// TODO(https://fxbug.dev/42109472): This bit is redundant with secure_required and supported heaps.
// This bit will not be carried forward to sysmem2.
@available(
        added=7,
        deprecated=23,
        note="use fuchsia.sysmem2.BufferMemoryConstraints.secure_required and/or fuchsia.sysmem2.BufferMemoryConstraints.permitted_heaps")
const videoUsageHwProtected uint32 = 4;
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VIDEO_USAGE_CAPTURE")
const videoUsageCapture uint32 = 8;
// videoUsageDecryptorOutput is for the output of a decryptor; such buffers will contain decrypted
// encoded access units.  The decryptor output may be in secure memory (controlled separately via
// secure_required).
//
// TODO(https://fxbug.dev/42109472): Overhaul usage so we can add usage categories without breaking client
// struct init code repeatedly.  For now, this value is in the "video" category but to some degree
// isn't really video; this usage can be used for the output of any secure decryptor.  Also, other
// usages should include input vs. output as those are separate buffer collections and are really
// separate usages.
//
// We have this as a separate usage because each participant that needs VMO handles needs to specify
// a usage that isn't nonUsage, and the decryptor output participant shouldn't be specifying
// videoUsageHwDecoder because the decryptor isn't the decoder.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VIDEO_USAGE_DECRYPTOR_OUTPUT")
const videoUsageDecryptorOutput uint32 = 16;
// This usage is for a HW video decoder's internal buffers that aren't shared with other
// participants.  These are allocated via sysmem because sysmem pre-reserves contiguous SYSTEM_RAM
// as appropriate, and is the only way to allocate secure memory.
@available(added=7, deprecated=23, note="use fuchsia.sysmem2.VIDEO_USAGE_HW_DECODER_INTERNAL")
const videoUsageHwDecoderInternal uint32 = 32;
