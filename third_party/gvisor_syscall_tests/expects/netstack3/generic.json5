// Copyright 2022 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
{
    actions: [
        {
            type: "expect_failure",
            matchers: [
                // Netstack3 does not support Unix domain sockets.
                "SocketTest.ProtocolUnix",
                "SocketTest.UnixSCMRightsOnlyPassedOnce",
                "SocketTest.UnixSocketPairProtocol",
                "SocketTest.UnixSocketStat",
                "SocketTest.UnixSocketStatFS",
                "OpenModes/SocketOpenTest.Unix/*",

                // Netstack3 does not support many UDP socket options or operations
                "IPUnboundSockets/IPUnboundSocketTest.CheckSkipECN/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.InvalidNegativeTOS/[4-5]",
                "IPUnboundSockets/IPUnboundSocketTest.LargeTOSOptionSize/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.NegativeTOS/[4-5]",
                "IPUnboundSockets/IPUnboundSocketTest.SetTOS/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.SmallTOSOptionSize/[4-5]",

                // TODO(https://fxbug.dev/329317900): Support setting/getting TTL for
                // TCP sockets.
                "IPUnboundSockets/IPUnboundSocketTest.ZeroTtl/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.TtlDefault/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.SetTtl/[4-7]",
                "IPUnboundSockets/IPUnboundSocketTest.ResetTtlToDefault/[4-7]",

                // Expect failure for TCP sockets.
                "IPUnboundSockets/IPUnboundSocketTest.NullTOS/2",
                "IPUnboundSockets/IPUnboundSocketTest.NullTOS/3",
                "IPUnboundSockets/IPUnboundSocketTest.NullTOS/6",
                "IPUnboundSockets/IPUnboundSocketTest.NullTOS/7",

                // Netstack3 does not have complete support for multicast sockets.
                "SocketTest.Permission",
            ],
        },
        {
            type: "skip",
            matchers: [
                // Skip failures for dual-stack and TCP sockets.
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/4",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/5",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/6",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/7",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/8",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/9",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/10",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/11",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/16",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/17",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/18",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/19",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/20",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/21",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/22",
                "AllIPSockets/TcpUdpSocketPairTest.ShutdownWrFollowedBySendIsError/23",
            ],
        },
    ],
}
